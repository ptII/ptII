<group>
    <!-- An effigy factory to open HSIF file. -->
    <entity name="HSIF Opener" class="ptolemy.hsif.HSIFEffigyFactory">
    </entity>
    <!-- Use a custom graph editor with a CT director already in it. -->
    <entity name="Graph Editor" class="ptolemy.actor.gui.PtolemyEffigy$Factory">
      <entity name="blank" class="ptolemy.actor.TypedCompositeActor">
      <!-- Call this "Continuous Time (CT) Solver" instead of "Solver"
           the name matches the name in the demos. -->
        <property name="Continuous Time (CT) Solver"
                  class="ptolemy.domains.ct.kernel.CTMixedSignalDirector">
          <property name="_location"
                    class="ptolemy.kernel.util.Location" value="68.0, 32.0">
          </property>
          <!-- Set the initStepSize and stopTime to get 100 samples. -->
          <property name="initStepSize" value="0.1"/>
          <property name="stopTime" value="10.0"/>
        </property>
      </entity>
    </entity>
    <!-- We need an FSM editor, but do not want it to appear in the -->
    <!-- File->New menu. -->
    <entity name="FSM Editor"
            class="ptolemy.actor.gui.PtolemyEffigy$FactoryWithoutNew">
      <entity name="blank" class="ptolemy.domains.fsm.kernel.FSMActor">
        <input source="ptolemy/configs/fsmLibrary.xml"/>
      </entity>
    </entity>
    <entity name="Modal Model"
            class="ptolemy.actor.gui.PtolemyEffigy$FactoryWithoutNew">
      <entity name="blank" class="ptolemy.domains.fsm.modal.ModalModel">
        <entity name="_Controller" class="ptolemy.domains.fsm.kernel.FSMActor">
          <input source="ptolemy/configs/fsmLibrary.xml"/>
          <property name="annotation" class="ptolemy.kernel.util.Attribute">
            <property name="_hideName"
                      class="ptolemy.kernel.util.SingletonAttribute"/>
            <property name="_iconDescription"
                      class="ptolemy.kernel.util.SingletonConfigurableAttribute"><configure><svg><text x="20" y="20" style="font-size:14; font-family:SansSerif; fill:blue">
Create a state machine here (and ports, if needed) and
create refinements for the states.  Create transitions
by holding the control key and dragging from one state
to another.  Right click to configure the properties 
of this model, including setting the final state(s).
Then delete this annotation.</text>
</svg></configure></property>
            <property name="_location"
                      class="ptolemy.kernel.util.Location" value="120.0, 5.0"/>
            <property name="_controllerFactory"
                      class="ptolemy.vergil.basic.NodeControllerFactory"/>
            <property name="_editorFactory"
                      class="ptolemy.vergil.toolbox.AnnotationEditorFactory"/>
          </property>
        </entity>
      </entity>
    </entity>
</group>
