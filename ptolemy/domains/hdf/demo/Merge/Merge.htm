<!-- : $Id$
 -->
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<link href="../../../../../doc/default.css" rel="stylesheet" type="text/css">
<TITLE>Merge</TITLE>
</HEAD>
<BODY>
<H1>Merge</H1>
<P>

<P>
<!-- PT DEPLOYJAVA CONVERTER -->
<p>
Merge is available as:
<ul>
<!-- See http://blogs.sun.com/thejavatutorials/entry/deployment_toolkit_101 -->
<script src="../../../../../doc/deployJava.js"></script>
<script >
    var dir = location.href.substring(0,location.href.lastIndexOf('/')+1);
    var url = dir + "Merge.jnlp";
    deployJava.createWebStartLaunchButton(url);
</script>
 <li>An <a href="MergeVergil.htm">applet</a>.
</ul>  
<script>

deployJava.displayWebStartMessage("../../../../../"); </script>
<!-- /PT DEPLOYJAVA CONVERTER -->
</p>
<p>This model demonstrates that HDF allows consumption and production rates
to vary dynamically. The port rates of the modal model is determined by
the model inside the state refinement.</p>

<p>In this example, two increasing sequences of numbers is merged into one 
increasing sequence.The model uses a feedback loop to remember the
previous largest number, which is from either input1 or input2. This number 
is fed back to input3 and used to compare with the new input from input2 or 
input1. Whether the consumption of token from input2 or input1 is described 
in the state machine. The smaller of the two is sent to the output and the 
larger one is updated to be the current largest number and fedback in the 
next iteration.</p>
</BODY>
</HTML>
