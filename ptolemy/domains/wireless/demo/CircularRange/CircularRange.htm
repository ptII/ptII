<!-- : $Id$
 -->
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<link href="../../../../../doc/default.css" rel="stylesheet" type="text/css">
<TITLE>CircularRange</TITLE>
</HEAD>
<BODY>
<H1>CircularRange</H1>
<P>

<P>
<!-- PT DEPLOYJAVA CONVERTER -->
<p>
CircularRange is available in two formats:
<ul>
  <li> As a Web Start Application: 
<!-- See http://blogs.sun.com/thejavatutorials/entry/deployment_toolkit_101 -->
<script src="../../../../../doc/deployJava.js"></script>
<script >
    var dir = location.href.substring(0,location.href.lastIndexOf('/')+1);
    var url = dir + "CircularRange.jnlp";
    deployJava.createWebStartLaunchButton(url);
</script>
 <li> As an <a href="CircularRangeVergil.htm">applet</a>.
</ul>  
The Java Web Start version is preferred, though browsers with versions of Java
earlier than Java 1.6.0_13 may only work with the applet version.
See <a href="../../../../../doc/webStartHelp.htm">Web Start Help</a> for details.
<!-- /PT DEPLOYJAVA CONVERTER -->
</p>
<p>This model shows a transmitter (at the left) and a receiver (at the right),
where the receiver moves in and out of range as the model executes.
The channel is a LimitedRangeChannel, which is a simple wireless channel
model where the transmitter specifies via a parameter in its output port
the distance over which it can transmit.  In this model, that distance is
shown graphically as the radius of the circular icon for the transmitter.
As the model executes, at random times, the range of the transmitter decreases.</p>
</BODY>
</HTML>
