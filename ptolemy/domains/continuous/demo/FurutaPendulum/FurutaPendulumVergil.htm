<!-- $Id$-->
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<link href="../../../../../doc/default.css" rel="stylesheet" type="text/css">
<TITLE>FurutaPendulum</TITLE>
</HEAD>
<BODY>

<H1>FurutaPendulum</H1>

The Furuta pendulum has a motor controlling the angle of an arm, from
which a free-swinging pendulum hangs.  The objective is to swing the
pendulum up and then balance it.

<P>
 <!-- All of the controls of the applet should be visible when the
applet is displayed on a XGA screen-->
<center>
<!-- The HTML below is for the Java Plugin.  The first
     section is for IE, the second is for Netscape
 -->
<!-- PT JNLP APPLET CONVERTER -->
<!-- We use both the older applet style and the JDK1.6.0_10 and later
     JNLP Applets.  In this way, we can support pre-JDK1.6.0_10 installs.
     See https://jdk6.dev.java.net/plugin2/jnlp/ -->
<APPLET 
   code = "ptolemy.vergil.VergilApplet"
   codebase = "../../../../.."
   archive = "ptolemy/domains/continuous/demo/FurutaPendulum/FurutaPendulum.jar,ptolemy/data/data.jar,ptolemy/domains/continuous/continuous.jar,ptolemy/domains/fsm/fsm.jar,ptolemy/ptsupport.jar,ptolemy/domains/gr/gr.jar,ptolemy/domains/sdf/sdf.jar,ptolemy/domains/ct/ct.jar,lib/diva.jar,ptolemy/domains/modal/modal.jar,ptolemy/domains/fsm/fsm.jar,ptolemy/domains/ct/ct.jar,ptolemy/vergil/vergilApplet.jar"
   width = "100"
   height = "100"
   >
  <!-- PARAM name="jnlp_href" value="ptolemy/domains/continuous/demo/FurutaPendulum/FurutaPendulum.jnlp" -->
<PARAM NAME = "commandLineArguments" VALUE = "-ptinyViewer FurutaPendulum.xml">
  <PARAM NAME = "NAME" VALUE = "FurutaPendulum" >
  <PARAM NAME = "background" VALUE = "#ffffff" >
  <PARAM NAME = "controls" VALUE = "buttons" >
  <PARAM NAME = "orientation" VALUE = "vertical" > \
  <PARAM NAME = "modelURL" VALUE = "FurutaPendulum.xml" > \
  <a href="FurutaPendulum.xml">MoML specification for this model.</a> \
</APPLET>
<!-- /PT JNLP APPLET CONVERTER -->
</CENTER>


<h3>Execution</h3>
An execution of the model displays various signals and at the bottom produces a 3-D animation of the physical system. 

<br>Model by Johan Eker

<h3>Top-Level Model</h3> 


The top-level is a continuous-time model that specifies the dynamics
of the physical system as a set of nonlinear ordinary differential
equations, and encapsulates a closed loop controller.


Framework by Jie Liu


<h3>Higher-Order Components</h3>

Complex submodels are generated automatically from equations
describing the physical dynamics.


<br>Framework by Jie Liu

<h3>A Modal Controller</h3>

The controller itself is modal, with three modes of operation, where a
different control law is specified for each mode.

<br>Framework by Xiaojun Liu

<h3>The Discrete Controllers</h3>

Three discrete submodels (dataflow models) specify control laws for
each of three modes of operation.
<br>Framework by Steve Neuendorffer


<h3>The Graphical Animator</h3>

A 3-D graphical animation is constructed modularly as a parametric
scene graph that is driven by the physical model.
<br>Framework by Chamberlain Fong


<p> The <a href="FurutaPendulumVergil.htm">block diagram</a>
for the model was constructed using the Ptolemy II schematic editor
called Vergil.

</p>
</BODY>
</HTML>
