# Makefile for PtolemyII SDF Domain Buffer Optimization
#
# @Version: $Id: makefile 43472 2006-08-21 23:16:56Z cxh $
# @Author: Christopher Brooks (makefile only)
#
# @Copyright (c) 2010 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY

ME =		ptolemy/domains/sdf/optimize

DIRS =		demo lib test

# Root of Ptolemy II directory
ROOT =		../../../..

CLASSPATH =	$(ROOT)

# Get configuration info
CONFIG =	$(ROOT)/mk/ptII.mk
include $(CONFIG)


# Used to build jar files
PTPACKAGE = 	optimize
PTCLASSJAR =

# Include the .class files from these jars in PTCLASSALLJAR
PTCLASSALLJARS = \
	lib/lib.jar

PTCLASSALLJAR = $(PTPACKAGE).jar

JSRCS = \
	BufferingProfileFiring.java \
	BufferingProfile.java \
	OptimalScheduleFinder.java \
	OptimizingSDFDirector.java \
	OptimizingSDFScheduler.java \
	SharedBufferTransformer.java

EXTRA_SRCS =	$(JSRCS)

# Files or directories that are present, but that 'make checkjunk'
# should not complain about
# Don't include demo or DIRS here, or else 'make sources' will run 'make demo'
MISC_FILES =	lib test

# make checkjunk will not report OPTIONAL_FILES as trash
# make distclean removes OPTIONAL_FILES
OPTIONAL_FILES = \
	demo \
	doc \
	'OptimalScheduleFinder$$_Actor.class' \
	'OptimalScheduleFinder$$_Channel.class' \
	'OptimalScheduleFinder$$_ListOfActors.class' \
	'OptimalScheduleFinder$$_ListOfChannels.class' \
	'OptimalScheduleFinder$$_ListOfPorts.class' \
	'OptimalScheduleFinder$$_Port.class' \
	'OptimalScheduleFinder$$_SetOfStates.class' \
	'OptimalScheduleFinder$$_SortedSetOfStates.class' \
	'OptimalScheduleFinder$$_State.class' \
	'OptimalScheduleFinder$$_StateComparator.class' \
	'OptimalScheduleFinder$$_StateComparatorLowestValue.class' \
	'OptimalScheduleFinder$$_StateComparatorMaximumProgress.class' \
	'OptimalScheduleFinder$$_TwoWayHashMap.class' \
	'OptimalScheduleFinder$$Actor.class' \
	'OptimalScheduleFinder$$Channel.class' \
	'OptimalScheduleFinder$$ListOfActors.class' \
	'OptimalScheduleFinder$$ListOfChannels.class' \
	'OptimalScheduleFinder$$ListOfPorts.class' \
	'OptimalScheduleFinder$$Port.class' \
	'OptimalScheduleFinder$$SetOfStates.class' \
	'OptimalScheduleFinder$$SortedSetOfStates.class' \
	'OptimalScheduleFinder$$State.class' \
	'OptimalScheduleFinder$$StateComparator.class' \
	'OptimalScheduleFinder$$TwoWayHashMap.class' \
	'OptimizingSDFDirector$$OptimizationCriteria.class'

JCLASS = $(JSRCS:%.java=%.class)

all: jclass
install: jclass jars


# Get the rest of the rules
include $(ROOT)/mk/ptcommon.mk
