/*
Below is the copyright agreement for the Ptolemy II system.

Copyright (c) 2009-2010 The Regents of the University of California.
All rights reserved.

Permission is hereby granted, without written agreement and without
license or royalty fees, to use, copy, modify, and distribute this
software and its documentation for any purpose, provided that the above
copyright notice and the following two paragraphs appear in all copies
of this software.

IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.

THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
ENHANCEMENTS, OR MODIFICATIONS.
*/
package ptolemy.domains.pthales.JNI;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


/**
 * ABFConstants class.
 *
 * @author rbarrere
 * @version $Id$
 * @since Ptolemy II 8.0
 * @Pt.ProposedRating Red (cxh)
 * @Pt.AcceptedRating Red (cxh)
 */
public interface ABFConstants {
  public final static double C = ABFJNI.C_get();
  public final static double Pi = ABFJNI.Pi_get();
  public final static int ATL_nb_ant = ABFJNI.ATL_nb_ant_get();
  public final static int ATL_nb_pls = ABFJNI.ATL_nb_pls_get();
  public final static int ATL_nb_beams = ABFJNI.ATL_nb_beams_get();
  public final static int ATL_nb_rg_cov = ABFJNI.ATL_nb_rg_cov_get();
  public final static int ATL_org_rg_cov = ABFJNI.ATL_org_rg_cov_get();
  public final static int ATL_lgth_chirp = ABFJNI.ATL_lgth_chirp_get();
  public final static double ATL_K_chirp = ABFJNI.ATL_K_chirp_get();
  public final static int ATL_rg_min = ABFJNI.ATL_rg_min_get();
  public final static double ATL_lambda = ABFJNI.ATL_lambda_get();
  public final static double ATL_Tpulse = ABFJNI.ATL_Tpulse_get();
  public final static double ATL_SubarraySpacing = ABFJNI.ATL_SubarraySpacing_get();
  public final static int ATL_Targ1_CIR = ABFJNI.ATL_Targ1_CIR_get();
  public final static int ATL_Targ1_V = ABFJNI.ATL_Targ1_V_get();
  public final static int ATL_Targ1_Dist = ABFJNI.ATL_Targ1_Dist_get();
  public final static int ATL_Targ1_RCS = ABFJNI.ATL_Targ1_RCS_get();
  public final static int ATL_rg_size = ABFJNI.ATL_rg_size_get();
  public final static int ATL_Beamwidth = ABFJNI.ATL_Beamwidth_get();
  public final static int ATL_noise_power = ABFJNI.ATL_noise_power_get();
  public final static int ATL_jam_CIR = ABFJNI.ATL_jam_CIR_get();
  public final static int ATL_jam_power = ABFJNI.ATL_jam_power_get();
  public final static int ATL_jam_freq_MHz = ABFJNI.ATL_jam_freq_MHz_get();
}
