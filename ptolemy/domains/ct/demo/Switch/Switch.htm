<!-- $Id$ -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>Switching Continuous Signals</title>
<link href="../../../../../doc/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<H1>Switching Continuous Signals</H1>
<P>
 <!-- All of the controls of the applet should be visible when the
applet is displayed on a XGA screen-->

<!-- PT DEPLOYJAVA CONVERTER -->
<p>
Switch is available as:
<ul>
<!-- See http://blogs.sun.com/thejavatutorials/entry/deployment_toolkit_101 -->
<script src="../../../../../doc/deployJava.js"></script>
<script >
    var dir = location.href.substring(0,location.href.lastIndexOf('/')+1);
    var url = dir + "Switch.jnlp";
    deployJava.createWebStartLaunchButton(url);
</script>
 <li>An <a href="SwitchVergil.htm">applet</a>.
</ul>  
<script>

deployJava.displayWebStartMessage("../../../../../"); </script>
<!-- /PT DEPLOYJAVA CONVERTER -->
<p>
This model shows how to handle hybrid systems with both continuous
and discrete inputs (and outputs). The EventSource actor generates
a sequence of discrete events which trigger the transition of the 
FSM inside the continuous time composite actor. The FSM routes one
of the two continuous time input signals to the output. Notice that
the "trigger" port of the continuous time composite actor has a 
parameter "signalType" with value "DISCRETE", which helps the 
CTDirector to schedule and execute the model correctly.
<p>
</BODY>
</HTML>
