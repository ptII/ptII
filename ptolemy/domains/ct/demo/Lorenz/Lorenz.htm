<!-- $Id$ -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>Lorenz Attractor</title>
<link href="../../../../../doc/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<H1>Lorenz Attractor</H1>
<P>
This is a model of a nonlinear feedback system in continuous-time:
 <!-- All of the controls of the applet should be visible when the
applet is displayed on a XGA screen-->
<center>

<!-- The HTML below is for the Java Plugin.  The first
     section is for IE, the second is for Netscape
 -->
<!-- PT JNLP APPLET CONVERTER -->
<!-- We use both the older applet style and the JDK1.6.0_10 and later
     JNLP Applets.  In this way, we can support pre-JDK1.6.0_10 installs.
     See https://jdk6.dev.java.net/plugin2/jnlp/ -->
<APPLET 
   code = "ptolemy.vergil.VergilApplet"
   codebase = "../../../../.."
   archive = "ptolemy/domains/ct/demo/Lorenz/Lorenz.jar,ptolemy/data/data.jar,ptolemy/ptsupport.jar,ptolemy/domains/ct/ct.jar,lib/diva.jar,ptolemy/domains/modal/modal.jar,ptolemy/domains/fsm/fsm.jar,ptolemy/domains/ct/ct.jar,ptolemy/vergil/vergilApplet.jar"
   width = "400"
   height = "650"
   >
  <PARAM name="jnlp_href" value="ptolemy/domains/ct/demo/Lorenz/Lorenz.jnlp">
  <PARAM NAME = "commandLineArguments" VALUE = "-ptinyViewer Lorenz.xml">
  <PARAM NAME = "NAME" VALUE = "Lorenz" >
  <PARAM NAME = "background" VALUE = "#ffffff" >
  <PARAM NAME = "controls" VALUE = "buttons" >
  <PARAM NAME = "orientation" VALUE = "vertical" > \
  <PARAM NAME = "modelURL" VALUE = "Lorenz.xml" > \
  <a href="Lorenz.xml">MoML specification for this model.</a> \
</APPLET>
<!-- /PT JNLP APPLET CONVERTER -->
</center>
<p>
This nonlinear feedback system is the well-known Lorenz attractor,
which exhibits chaotic behavior in the form of an
unstable periodic orbit.
The system is given by the differential equations:
<pre>
<code>    dx1/dt = sigma*(x2-x1)</code>
<code>    dx2/dt = (lambda-x3)*x1 -x2</code>
<code>    dx3/dt = x1*x2-b*x3</code>
</pre>
<p>
The applet above simulates these differential equations using
the CT (continuous-time) domain in Ptolemy II.  The CT domain
includes a sophisticated numerical solver for differential equations.
The plot shows x2 vs. x1. The initial conditions of the states are
all 1.0. The parameters sigma, lambda and b can be modified to change
the behavior of the model.
<p>
Above, the applet has been implemented directly in
Java (see the <a href="Lorenz.java">source code</a>).
An <a href="LorenzVergil.htm">alternative definition</a>
uses the Ptolemy II schematic editor
called Vergil.
<p>
See
Fishwick, <I>Simulation Model Design and Execution: Building Digital
Worlds</I>, Prentice Hall, 1995, pp213-214.
<p>
</BODY>
</HTML>
