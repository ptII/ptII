<!-- $Id$ -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>Ptolemy II Ptalon</title>
<link href="../../../../doc/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<h1>Ptalon</h1>
<P>
The Ptolemy II model-based design tool provides many features that
make it perfect for modeling real-time concurrent
systems. Hierarchical heterogeniety, or the ability for components to
communcate with different interaction patterns at different levels of
a system hierarchy, helps users build systems with complex
communication semantics.

 <p>As the number of components in real-world systems grows larger and
larger, we will also need ways to describe huge models with a
relatively small amount of code. To meet this need we propose
"composition languages". The key to composition languages is the
ability to succinctly specify "higher-order models". As an example, a
higher-order model may be used in distributed sort application. The
model may be described as a function parameterized by a divide
component (or model), a conquer component, and the respective numbers
of divide and conquer components. A programmer will specify this
higher-order model once and can then use it for an arbitrary number of
components with arbitrary divide and conquer components.

 <p>Ptalon is our first incarnation of a composition language. As a beta
target, we are simply generating Ptolemy-compliant Java code. Ptalon
says nothing about computation, only the structure of hierarchical
models that communicate through ports. This will make it easy to build
Ptalon compilers for other targets, such as embedded C code or VHDL. 

 <p>James Adam Cataldo, "<a
href="http://www.eecs.berkeley.edu/Pubs/TechRpts/2006/EECS-2006-189.pdf#in_browser"
target="_top">The Power of Higher-Order Composition Languages in
System Design</a>," Ph.D. Thesis, EECS Department, University of
California, Berkeley, Technical Report No. UCB/EECS-2006-189
December 18, 2006.


</body>
</html>
