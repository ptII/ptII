/* This actor uses iteration to make
 * n copies of the transformer actor in
 * series, where n is a parameter
 * specified by the user
 */
IterativeSeries is {
	actorparameter transformer;
	parameter n;
	inport input;
	outport output;
	if [[ n >= 0 ]] {
		relation r[[0]];
		
		/* This is the Ptalon for loop,
		 * which leverages the expression language
		 */
		for a initially [[ 1 ]] [[ a <= n ]] {
			relation r[[a]];
			transformer(input := r[[a - 1]], output := r[[a]] );
		} next [[ a + 1 ]]
		this(input := r[[0]], output := r[[n]] );
	} else {
	}
}

/* Does this actor make sense?
 */
