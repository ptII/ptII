<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="PythonClone" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="7.1.devel">
    </property>
    <property name="SDF Director" class="ptolemy.domains.sdf.kernel.SDFDirector">
        <property name="iterations" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="allowDisconnectedGraphs" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-15.0, 80.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={250, 176, 740, 511}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[527, 405]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{174.4646464646465, 143.3894807449495}">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Two different python actors are cloned&#10;when the model runs. The clone of&#10;actor A should use the script for actor&#10;A, not actor B (and vice versa).">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[95.0, 5.0]">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.6,0.6,0.6,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Author: Daniel Crawl">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[240.0, 275.0]">
        </property>
    </property>
    <entity name="MultiInstanceComposite" class="ptolemy.actor.lib.hoc.MultiInstanceComposite">
        <property name="nInstances" class="ptolemy.data.expr.Parameter" value="5">
        </property>
        <property name="showClones" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <doc>Creates multiple instances of itself</doc>
        <property name="annotation" class="ptolemy.kernel.util.Attribute">
            <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_iconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                <configure><svg><text x="20" y="20" style="font-size:14; font-family:SansSerif; fill:blue">Each python actor outputs
to a different port.</text></svg></configure>
            </property>
            <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                <configure>
                <svg> 
                    <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-A-</text>
                </svg>
              </configure>
            </property>
            <property name="_controllerFactory" class="ptolemy.vergil.basic.NodeControllerFactory">
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.AnnotationEditorFactory">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[150.0, 60.0]">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[45.0, 170.0]">
        </property>
        <property name="SDF Director" class="ptolemy.domains.sdf.kernel.SDFDirector">
            <property name="iterations" class="ptolemy.data.expr.Parameter" value="1">
            </property>
            <property name="allowDisconnectedGraphs" class="ptolemy.data.expr.Parameter" value="true">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{65, 80}">
            </property>
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={313, 197, 813, 506}, maximized=false}">
        </property>
        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[600, 400]">
        </property>
        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
        </property>
        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{300.0, 200.0}">
        </property>
        <entity name="python actor A" class="ptolemy.actor.lib.python.PythonScript">
            <property name="script" class="ptolemy.kernel.util.StringAttribute" value="from ptolemy.data import StringToken&#10;from ptolemy.data.type import BaseType&#10;&#10;class Main :&#10;  &quot;python actor a&quot;&#10;&#10;  def preinitialize(self) :&#10;    self.portA.setTypeEquals(BaseType.STRING)&#10;&#10;  def fire(self) :&#10;    self.portA.broadcast(StringToken(&quot;A&quot;))&#10;">
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.TextEditorConfigureFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[150.0, 165.0]">
            </property>
            <port name="portA" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
        </entity>
        <entity name="python actor B" class="ptolemy.actor.lib.python.PythonScript">
            <property name="script" class="ptolemy.kernel.util.StringAttribute" value="from ptolemy.data import StringToken&#10;from ptolemy.data.type import BaseType&#10;&#10;class Main :&#10;  &quot;python actor b&quot;&#10;&#10;  def preinitialize(self) :&#10;    self.portB.setTypeEquals(BaseType.STRING)&#10;&#10;  def fire(self) :&#10;    self.portB.broadcast(StringToken(&quot;B&quot;))&#10;">
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.TextEditorConfigureFactory">
                <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
                </property>
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[150.0, 230.0]">
            </property>
            <port name="portB" class="ptolemy.actor.TypedIOPort">
                <property name="output"/>
                <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
            </port>
        </entity>
        <entity name="Test" class="ptolemy.actor.lib.Test">
            <property name="correctValues" class="ptolemy.data.expr.Parameter" value="{&quot;A&quot;}">
            </property>
            <property name="trainingMode" class="ptolemy.actor.parameters.SharedParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[320.0, 165.0]">
            </property>
        </entity>
        <entity name="Test2" class="ptolemy.actor.lib.Test">
            <property name="correctValues" class="ptolemy.data.expr.Parameter" value="{&quot;B&quot;}">
            </property>
            <property name="trainingMode" class="ptolemy.actor.parameters.SharedParameter" value="false">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="[320.0, 230.0]">
            </property>
        </entity>
        <relation name="relation" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="1">
            </property>
        </relation>
        <relation name="relation2" class="ptolemy.actor.TypedIORelation">
            <property name="width" class="ptolemy.data.expr.Parameter" value="1">
            </property>
        </relation>
        <link port="python actor A.portA" relation="relation"/>
        <link port="python actor B.portB" relation="relation2"/>
        <link port="Test.input" relation="relation"/>
        <link port="Test2.input" relation="relation2"/>
    </entity>
</entity>
