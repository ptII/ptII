<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- : $Id: modelJnlp.htm.in 56535 2009-12-09 04:18:30Z cxh $
-->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../../../../../doc/default.css" rel="stylesheet" type="text/css">
<title>LogicalAND</title>
</head>
<body>
<h1>LogicalAND</h1>
This model shows a simple example on how to annotate properties using a constraint solver algorithm.
Initially the algorithm collects special constraints for Ramp and Scale Actors and default constraints for the rest of the 
model according to the definition in the Solver Attribute (blue box). The solver initializes all properties to True and then 
finds the least fixed point so that all constraints are satisfied. The constraints are given as inequalities over a lattice.
The default constraints for an actor on the lattice in this example express a logical AND, i.e. if properties of all inputs
of an actor are True, then the properties of all outputs are True. 

Authors: Thomas Mandl, Man-Kit Leung
<!-- PT DEPLOYJAVA CONVERTER -->
<p>
LogicalAND is available as:
<ul>
<!-- See http://blogs.sun.com/thejavatutorials/entry/deployment_toolkit_101 -->
<script src="../../../../../doc/deployJava.js"></script>
<script >
    var dir = location.href.substring(0,location.href.lastIndexOf('/')+1);
    var url = dir + "LogicalAND.jnlp";
    deployJava.createWebStartLaunchButton(url);
</script>
 <li>An <a href="LogicalANDVergil.htm">applet</a>.
</ul>  
<script>

deployJava.displayWebStartMessage("../../../../../"); </script>
<!-- /PT DEPLOYJAVA CONVERTER -->

</p>

</body>
</htm>
