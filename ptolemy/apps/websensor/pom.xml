<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.berkeley</groupId>
  <artifactId>websensor</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>websensor Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
    <!-- Shared version number property -->
  <properties>
  	<org.springframework.version>3.0.5.RELEASE</org.springframework.version>
  </properties>
  
  <dependencies>
  
  	<!--  Included by Maven automatically -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
    <!--  Spring framework -->
    <!--  An example here:  Getting started with Maven and Spring
          http://blog.springsource.com/2011/01/17/green-beans-getting-started-with-maven-and-spring/ -->
	
	<!--Core utilities used by other modules.
		Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)-->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
		
	<!-- Needed for application context -->
	<!-- Expression Language (depends on spring-core)
		 Define this if you use Spring Expression APIs (org.springframework.expression.*)-->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-expression</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
		
	<!-- Needed for application context -->
	<!-- Bean Factory and JavaBeans utilities (depends on spring-core)
		 Define this if you use Spring Bean APIs (org.springframework.beans.*)-->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-beans</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
		
	<!--  Needed for application context -->
	<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
		  Define this if you use Spring AOP APIs (org.springframework.aop.*)-->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
		
	<!--Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
		This is the central artifact for Spring's Dependency Injection Container and is generally always 
		Defined-->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${org.springframework.version}</version>
<!--     	    <scope>runtime</scope> -->
	    <exclusions>
	    	<exclusion>
	           <groupId>commons-logging</groupId>
	           <artifactId>commons-logging</artifactId>
	         </exclusion>
	      </exclusions>
	   </dependency>
	   
	   		<!--Web application development utilities applicable to both Servlet and Portlet Environments(depends on spring-core, spring-beans, spring-context)
		    Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-web</artifactId>
		    <version>${org.springframework.version}</version>
		</dependency>
		<!--Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
		    Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-webmvc</artifactId>
		    <version>${org.springframework.version}</version>
		</dependency>
		<!--Spring MVC for Portlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
		    Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-webmvc-portlet</artifactId>
		    <version>${org.springframework.version}</version>
		</dependency>
		<!--Support for testing Spring applications with tools such as JUnit and TestNGThis artifact is generally always 
		    Defined with a 'test' scope for the integration testing framework and unit testing stubs-->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <version>${org.springframework.version}</version>
		    <scope>test</scope>
		  </dependency>
		  
	 	<!--  javax.servlet packages needed for HttpServletResponse -->
	 	<dependency>
		    <groupId>javax.servlet</groupId>
		    <scope>runtime</scope>
		    <artifactId>jstl</artifactId>
		    <version>1.1.2</version>
		</dependency>
		
		<!--  Make sure to declare scope as provided to avoid Tomcat error 
			  (Tomcat already includes this, so avoid double-including it)-->
		  <dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>servlet-api</artifactId>
		    <version>2.5</version>
		    <scope> provided </scope>
		  </dependency>
		  
		<!--  Needed for JSON -->
		<dependency>
    		<groupId>org.codehaus.jackson</groupId>
    		<artifactId>jackson-mapper-asl</artifactId>
    		<version>1.8.5</version>
		</dependency>
		<!-- 
		<dependency>
			<groupId> net.sf.spring-json </groupId>
			<artifactId> spring-json </artifactId>
			<version> 1.3.0 </version>
		</dependency>	
		
		<dependency>
			<groupId> net.sf.sojo </groupId>
			<artifactId> sojo-optional </artifactId>
			<version> 0.5.0 </version>
		</dependency>
		 -->
		  
  </dependencies>
  <build>
    <finalName>websensor</finalName>
  </build>
</project>
