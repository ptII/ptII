<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
<!-- The Java Spring view for the SensorController

 Copyright (c) 1997-2011 The Regents of the University of California.
 All rights reserved.
 Permission is hereby granted, without written agreement and without
 license or royalty fees, to use, copy, modify, and distribute this
 software and its documentation for any purpose, provided that the above
 copyright notice and the following two paragraphs appear in all copies
 of this software.

 IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
 FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
 ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
 THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
 SUCH DAMAGE.

 THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
 PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
 CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
 ENHANCEMENTS, OR MODIFICATIONS.

 PT_COPYRIGHT_VERSION_2
 COPYRIGHTENDKEY

 -->


<!--     DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
<!--     Scans within the base package of the application for @Components to configure as beans -->
<!--     @Controller, @Service, @Configuration, etc. -->

	<!-- This instructs Spring to scan the given package for the annotations 
	     listed above and to instantiate those classes 
	     That saves time, since otherwise Spring would require a bean to be 
	     defined for each one of those in this file -->
    <mvc:annotation-driven /> 
    <context:component-scan base-package="org.ptolemy.websensor.controller" />  
    
    <!--  Map all requests for files in the /static/ directory to the 
    	  ResourceHttpRequestHandler
          This is needed to serve the .js files included in the .jsp files 
          Otherwise Spring will not be able to find a servlet to serve them -->
    <mvc:resources mapping="/static/**" location="/static/"/>   
	
	<!-- Needed since we define the SensorContoller bean explicitly -->
    <bean
    	class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter">
	</bean>
	
	<!--  Configure the views.  Return an HTML view for requests to ".html" and
		  a JSON view for requests ending in ".json"
		  No changes are needed in the Controller - it returns a ModelAndView 
		  as usual 
		  See:  http://blog.anthonychaves.net/2010/02/01/spring-3-0-web-mvc-and-json/
		  -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">  
  		<property name="mediaTypes">  
    		<map>  
      			<entry key="html" value="text/html"/>  
      			<entry key="json" value="application/json"/>  
   			 </map>  
  		</property>  
 		 <property name="viewResolvers">  
   	 		<list>  
      			<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">  
        			<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>  
        			<property name="prefix" value="/presentation/views/"/>  
        			<property name="suffix" value=".jsp"/>  
      			</bean>  
    		</list>  
  		</property>  
  		<property name="defaultViews">  
    		<list>  
      			<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">  
        			<property name="prefixJson" value="true"/>  
      			</bean>  
    		</list>  
  		</property>  
	</bean> 	  
	
	<!-- 	  
  	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="prefix" value="/presentation/views/" />
	    <property name="suffix" value=".jsp" />
   </bean>
    -->
   

   
   <!-- Declare individual sensors as beans 
   		Set the properties of the sensors using the setter methods -->
   <bean id="temperatureSensor" class="org.ptolemy.websensor.lib.Sensor">
   		<property name="interval" value="1 hour" />
   		<property name="type" value="Temperature" />
   		<property name="unit" value="degC" />
   </bean>
   
   <bean id="humiditySensor" class="org.ptolemy.websensor.lib.Sensor">
   		<property name="interval" value="1 hour" />
   		<property name="type" value="Humidity" />
   		<property name="unit" value="%" />
   </bean>
   
   <bean id="pressureSensor" class="org.ptolemy.websensor.lib.Sensor">
   		<property name="interval" value="1 hour" />
   		<property name="type" value="Pressure" />
   		<property name="unit" value="mbar" />
   </bean>
   
   <!-- Declare the SensorController and load the sensor beans into it -->
     
   <bean id="sensorController" class="org.ptolemy.websensor.controller.SensorController">
   <!--  The name "sensors" here matches the setter in the class, setSensors(Sensors[]) -->	
   		<property name="sensors"> 
   			<list>
   				<ref bean="temperatureSensor" />
   				<ref bean="humiditySensor" />
   				<ref bean="pressureSensor" />
   			</list>
   		</property>
   		<property name="location" value="Pittsburgh" />	
   </bean>   

</beans>

