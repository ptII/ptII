sensor
  COMPOSITE_SENSOR composite_sensor uses composite_sensor_device_driver;
actuator
  THROTTLE_MOTOR throttle_motor uses throttle_motor_device_driver;
output
  MANAGER_OUTPUT manager_output := init_manager_output;
  SERVO_CONTROL_OUTPUT servo_control_output := init_servo_control_output;
  MONITOR_OUTPUT monitor_output := init_monitor_output;
task manager_task (MANAGER_INPUT input)
        output (manager_output)
        state (MANAGER_PARAM param := init_manager_param)
{
        schedule manager_task(input, manager_output, param)
}
task servo_control_task (SERVO_CONTROL_INPUT input)
        output (servo_control_output)
        state (SERVO_CONTROL_PARAM param := init_servo_control_param)
{
        schedule servo_control_task(input, servo_control_output, param)
}
task monitor_task (MONITOR_INPUT input)
        output (monitor_output)
        state (MONITOR_PARAM param := init_monitor_param)
{
        schedule monitor_task(input, monitor_output, param)
}
driver manager_driver (monitor_output, composite_sensor)
        output (MANAGER_INPUT input)
{
  if c_true() then manager_input_driver( monitor_output, composite_sensor, input)
}
driver servo_control_driver (manager_output, composite_sensor)
        output (SERVO_CONTROL_INPUT input)
{
  if c_true() then servo_control_input_driver( manager_output, composite_sensor, input)
}
driver monitor_driver (servo_control_output, manager_output, composite_sensor)
        output (MONITOR_INPUT input)
{
  if c_true() then monitor_input_driver( servo_control_output, manager_output, composite_sensor, input)
}
driver throttle_motor_driver (servo_control_output)
        output (THROTTLE_MOTOR throttle_motor_output)
{
  if c_true() then throttle_motor_input_driver( servo_control_output, throttle_motor_output)
}
start real_time_controller {
  mode real_time_controller () period 30 {
    actfreq 10 do throttle_motor (throttle_motor_driver);
    taskfreq 2 do manager_task(manager_driver);
    taskfreq 10 do servo_control_task(servo_control_driver);
    taskfreq 1 do monitor_task(monitor_driver);
  }
}
