<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="SDFDDI" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="3.1-devel">
    </property>
    <property name="SDF Director" class="ptolemy.domains.sdf.kernel.SDFDirector">
        <property name="Scheduler" class="ptolemy.domains.sdf.kernel.SDFScheduler">
        </property>
        <property name="allowDisconnectedGraphs" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="allowRateChanges" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="iterations" class="ptolemy.data.expr.Parameter" value="100">
        </property>
        <property name="vectorizationFactor" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="65.0, 35.0">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={57, 58, 819, 604}}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[604, 495]">
    </property>
    <property name="annotation" class="ptolemy.kernel.util.Attribute">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_iconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure><svg><text x="20" y="20" style="font-size:14; font-family:SansSerif; fill:blue">This model demonstrates the SDF DDI plugin.
[DDI: domain-dependent interpreter]

The SDF DDI plugin configures the input/output token rates for each port depending
on a simple analysis of the actor definition. It will detect non-SDF actors and 
create an error message.

Modify the parameters of the A, B, and Upsample actors and try to run the model.

As the A actor shows, whether an actor in fact *is* an SDF actor may depend on 
its parameter values. Therefore the SDF DDI will test this condition when the 
model is about to be run, and signal an error if it is found to be violated.

</text></svg></configure>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-A-</text>
      </svg>
    </configure>
        </property>
        <property name="_controllerFactory" class="ptolemy.vergil.basic.NodeControllerFactory">
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.AnnotationEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="35.0, 235.0">
        </property>
    </property>
    <entity name="A" class="ptolemy.caltrop.actors.CalInterpreter">
        <property name="calCode" class="ptolemy.kernel.util.StringAttribute" value="actor A (k1, k2) A ==&gt; B :&#10;&#10;  action [x] repeat k1 ==&gt; [x] &#10;  guard #x = k2 end&#10;&#10;  action [x] repeat k2 ==&gt; [x] end &#10;end">
            <property name="style" class="ptolemy.actor.gui.style.TextStyle">
            </property>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="calCode">
            </property>
            <property name="columnsDisplayed" class="ptolemy.data.expr.Parameter" value="80">
            </property>
            <property name="rowsDisplayed" class="ptolemy.data.expr.Parameter" value="40">
            </property>
        </property>
        <property name="k1" class="ptolemy.data.expr.Parameter" value="2">
        </property>
        <property name="k2" class="ptolemy.data.expr.Parameter" value="2">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="180.0, 125.0">
        </property>
        <port name="A" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
        <port name="B" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
    </entity>
    <entity name="B" class="ptolemy.caltrop.actors.CalInterpreter">
        <property name="calCode" class="ptolemy.kernel.util.StringAttribute" value="actor B (k) X1, X2 ==&gt; Y :&#10;&#10;  action [x1], [x2] ==&gt; [x1, x2] repeat k end&#10;end">
            <property name="style" class="ptolemy.actor.gui.style.TextStyle">
            </property>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="calCode">
            </property>
            <property name="columnsDisplayed" class="ptolemy.data.expr.Parameter" value="80">
            </property>
            <property name="rowsDisplayed" class="ptolemy.data.expr.Parameter" value="40">
            </property>
        </property>
        <property name="k" class="ptolemy.data.expr.Parameter" value="2">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="415.0, 135.0">
        </property>
        <port name="X1" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
        <port name="X2" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
        <port name="Y" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
    </entity>
    <entity name="Upsample" class="ptolemy.caltrop.actors.CalInterpreter">
        <property name="calCode" class="ptolemy.kernel.util.StringAttribute" value="actor Upsample (k) X ==&gt; Y :&#10;&#10;  function up(x, k) :&#10;    if k = 0 then [] &#10;    else [x] + up(x, k - 1) end&#10;  end&#10;&#10;  action [x] ==&gt; [up(x, k)] repeat k end&#10;end">
            <property name="style" class="ptolemy.actor.gui.style.TextStyle">
            </property>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="calCode">
            </property>
            <property name="columnsDisplayed" class="ptolemy.data.expr.Parameter" value="80">
            </property>
            <property name="rowsDisplayed" class="ptolemy.data.expr.Parameter" value="40">
            </property>
        </property>
        <property name="k" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="305.0, 200.0">
        </property>
        <port name="X" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
        <port name="Y" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
    </entity>
    <entity name="Ramp" class="ptolemy.caltrop.actors.CalInterpreter">
        <property name="calCode" class="ptolemy.kernel.util.StringAttribute" value="actor Ramp (init, step) ==&gt; Out :&#10;&#10;  v := init;&#10;&#10;  action ==&gt; [old v]&#10;  do&#10;    v := v + step;&#10;  end&#10;end ">
            <property name="style" class="ptolemy.actor.gui.style.TextStyle">
            </property>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="calCode">
            </property>
            <property name="columnsDisplayed" class="ptolemy.data.expr.Parameter" value="80">
            </property>
            <property name="rowsDisplayed" class="ptolemy.data.expr.Parameter" value="40">
            </property>
        </property>
        <property name="init" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="step" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="75.0, 125.0">
        </property>
        <port name="Out" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
    </entity>
    <entity name="Test" class="ptolemy.actor.lib.Test">
        <property name="correctValues" class="ptolemy.data.expr.Parameter" value="{1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 51, 52, 52, 53, 53, 54, 54, 55, 55, 56, 56, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 62, 63, 63, 64, 64, 65, 65, 66, 66, 67, 67, 68, 68, 69, 69, 70, 70, 71, 71, 72, 72, 73, 73, 74, 74, 75, 75, 76, 76, 77, 77, 78, 78, 79, 79, 80, 80, 81, 81, 82, 82, 83, 83, 84, 84, 85, 85, 86, 86, 87, 87, 88, 88, 89, 89, 90, 90, 91, 91, 92, 92, 93, 93, 94, 94, 95, 95, 96, 96, 97, 97, 98, 98, 99, 99, 100, 100, 101, 101, 102, 102, 103, 103, 104, 104, 105, 105, 106, 106, 107, 107, 108, 108, 109, 109, 110, 110, 111, 111, 112, 112, 113, 113, 114, 114, 115, 115, 116, 116, 117, 117, 118, 118, 119, 119, 120, 120, 121, 121, 122, 122, 123, 123, 124, 124, 125, 125, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142, 142, 143, 143, 144, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 149, 150, 150, 151, 151, 152, 152, 153, 153, 154, 154, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 160, 160, 161, 161, 162, 162, 163, 163, 164, 164, 165, 165, 166, 166, 167, 167, 168, 168, 169, 169, 170, 170, 171, 171, 172, 172, 173, 173, 174, 174, 175, 175, 176, 176, 177, 177, 178, 178, 179, 179, 180, 180, 181, 181, 182, 182, 183, 183, 184, 184, 185, 185, 186, 186, 187, 187, 188, 188, 189, 189, 190, 190, 191, 191, 192, 192, 193, 193, 194, 194, 195, 195, 196, 196, 197, 197, 198, 198, 199, 199, 200, 200}">
        </property>
        <property name="tolerance" class="ptolemy.data.expr.Parameter" value="1.0E-9">
        </property>
        <property name="trainingMode" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="545.0, 155.0">
        </property>
        <port name="input" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="multiport"/>
        </port>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <vertex name="vertex1" value="245.0, 125.0">
        </vertex>
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="A.A" relation="relation4"/>
    <link port="A.B" relation="relation"/>
    <link port="B.X1" relation="relation"/>
    <link port="B.X2" relation="relation2"/>
    <link port="B.Y" relation="relation3"/>
    <link port="Upsample.X" relation="relation"/>
    <link port="Upsample.Y" relation="relation2"/>
    <link port="Ramp.Out" relation="relation4"/>
    <link port="Test.input" relation="relation3"/>
</entity>
