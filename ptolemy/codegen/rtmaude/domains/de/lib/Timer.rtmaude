/***semantics_Timer***/
(tomod TIMER is
  inc ACTOR .

  class Timer .  subclass Timer < Actor .
  eq ^ Timer = Actor .

  vars PORTS : Configuration . vars PI PI' : PortId .
  var O : Oid . var REST : ObjectConfiguration .
  var E : Exp . vars V TV : Value . 
  var AM : AssignMap . var MEM : Memory . var VM : ValueMap .  
  var UPDATED : Bool .

---------------------------------------------------------------------
--- Semantics Steps
---------------------------------------------------------------------

  --- set each status of ports to 'unknown'
  eq prefire(Timer, 
    < O : Timer | 
      parameters : ('value |-> E ; AM) >) 
   = prefire(Actor, 
    < O : Timer | store : 'value |-> k(E) >) .

  eq portFixPoints(UPDATED,
     < O : Timer |
       status : enabled,
       ports :  < PI : OutPort | status : unknown > PORTS
    >
    REST)
   = portFixPoints(true,
     < O : Timer |
       ports : < PI : OutPort | status : absent > PORTS
    >
    REST) .

  eq postfire(Timer,
    < O : Timer |
      store : 'value |-> V ; MEM,
      ports : < 'input : InPort | status : present, value : TV > PORTS
    >)
  = evt(event(O ! 'output, V), toTime(TV))
    postfire(^ Timer, < O : Timer | >) .
endtom)
/**/
