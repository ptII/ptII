/***moduleName***/
MODAL-MODEL/**/

/***className***/
ModalModel/**/

/***checkModuleName***/
CHECK-MODALMODEL-ACTOR/**/

/***sharedBlock***/
(tomod MODAL-MODEL is 
  inc COMPOSITE-ACTOR .
  pr FSM-ACTOR .

  class ModalModel | controller : Oid,
                     refinement : RefinementSet .
    subclass ModalModel < CompositeActor .
  
  sort RefinementItem .
  op refine-state : Location Oid -> RefinementItem .
  
  sort RefinementSet .
  subsort RefinementItem < RefinementSet .
  op empty : -> RefinementSet .
  op __ : RefinementSet RefinementSet -> RefinementSet [ctor comm assoc id: empty] .
  
---------------------------------------------------------------------
--- Semantics Steps
---------------------------------------------------------------------

  var O CO : Oid . var REFS : RefinementSet . var ACTS REST : Configuration .
  var STATE STATE' : Location .
  var ACTSTAT : ActorStatus .
  var UPDATED FLAG : Bool .

  --- before fix-computation, refinement actors for current states
  --- are enabled, and the controller is disabled.
  eq initActor(ModalModel,
    < O : ModalModel |
        controller : CO,
        refinement : REFS,
        innerActors :  
        	< CO : FSM-Actor | 
        		status : ACTSTAT,
        		currState : STATE 
        	> 
        	ACTS
    >)
   = initActor(CompositeActor,
    < O : ModalModel |
        innerActors : 
            < CO : FSM-Actor | 
            	status : disabled 
            > 
        	setStateRefinement(STATE, REFS, ACTS)
    >) .

  op setStateRefinement : Location RefinementSet Configuration -> Configuration .
  eq setStateRefinement(STATE, refine-state(STATE', O) REFS,
    < O : Actor | status : ACTSTAT > REST)
  = < O : Actor | status : if STATE == STATE' then enabled else disabled fi >
    setStateRefinement(STATE, REFS, REST) .
  eq setStateRefinement(STATE, empty, REST) = REST .

  ---Enable a controller. Before this,
  ---I assume that all innerActors are already computed
  ---by the default Maude equation strategy (inner-most one reduced first)
  eq portFixPoints(UPDATED,
    < O : ModalModel |
        controller : CO,
        innerActors :
            < CO : FSM-Actor | status : disabled > ACTS
    > REST)
   = portFixPoints(true,
    < O : ModalModel |
        innerActors : 
            < CO : FSM-Actor | status : enabled > ACTS
    > REST) .
    
  ---FIXME: 'controller ==> parent' connection should overwrite 
  
    eq executeStep(ModalModel, < O : ModalModel | >, REST) 
     = executeStep(CompositeActor, < O : ModalModel | >, REST) .
  
endtom)

(tomod CHECK-MODALMODEL-ACTOR is
  pr CHECK-FSM-ACTOR .
  pr MODAL-MODEL .

  var ACTS CF : Configuration .  vars O CO : Oid .
  var L : Location . 

  eq {< O : ModalModel | 
        controller : CO, innerActors : ACTS > CF} |= O @ L 
   = {ACTS} |= CO @ L .
endtom)
/**/

/***refineStateBlock($state, $actor)***/
refine-state('$state,'$actor)/**/