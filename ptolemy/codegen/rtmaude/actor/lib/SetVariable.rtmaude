/***attr_SetVariable***/
variableName : '$info(variableName)/**/

/***semantics_SetVariable***/
(tomod SET-VARIABLE is 
  inc ATOMIC-ACTOR .
  inc COMPOSITE-ACTOR .    --- assuming composite actor

  class SetVariable | variableName : ParamId .
    subclass SetVariable < AtomicActor .
  eq ^ SetVariable = AtomicActor .

  --- message to change a variables of the container (possible any ancestor).
  msg setv : ParamId Value -> Msg .

---------------------------------------------------------------------
--- Variable Declaration
---------------------------------------------------------------------

  vars PORTS PARAMS CF : Configuration .  
  var REST : ObjectConfiguration . var O O' : Oid . 
  var RI : ParamId .  vars PI : PortId .  
  var E : Exp . vars V V' : Value . 

---------------------------------------------------------------------
--- Message
---------------------------------------------------------------------

  ---- set a variables of a parent actor by the 'setv' message
  eq < O : CompositeActor | 
        innerActors : CF setv(RI, V),
        parameters : < RI : Parameter | exp : E > PARAMS >
  = 
     < O : CompositeActor | 
        innerActors : CF,
        parameters : < RI : Parameter | exp : V > PARAMS > .

  --- check the nearest ancestor if a parent has no such parameter
  ceq < O : CompositeActor | innerActors : CF setv(RI,V), parameters : PARAMS >
    = < O : CompositeActor | innerActors : CF > setv(RI,V)
   if not RI in PARAMS .

---------------------------------------------------------------------
--- Semantics Steps
---------------------------------------------------------------------

  --- NOTE: we assume "delayed" SetVariable actor, 
  --- because a model should be deterministic.

*** 0] init

*** 1] prefire

*** 2] portFixPoints

  --- The output port returns the current parameter value.
  --- Note: the value will be evalueated by computation rules
  eq portFixPoints(
      < O : SetVariable | 
         status : enabled,
         variableName : RI,
         ports : < PI : InPort | status : present >
                 < 'output : OutPort | status : unknown > PORTS > 
      REST)
  =  
     portFixPoints(
      < O : SetVariable | 
         ports : < PI : InPort | >
                 < 'output : OutPort | status : present, value : RI > PORTS > 
      REST) .

*** 3] postfire

  --- generate a message to change a variables of the container.
  eq postfire(SetVariable,
      < O : SetVariable | 
         status : enabled,
         variableName : RI, 
         ports : < PI : InPort | status : present, value : V > PORTS >)
  = 
     setv(RI, V) postfire(Actor, < O : SetVariable | >) .

endtom)
/**/
