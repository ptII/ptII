/***attr_Pulse***/
current-index : 0/**/

/***mapName($index, $value)***/
$index |-> $value/**/

/***semantics_Pulse***/
(tomod PULSE is
  inc ATOMIC-ACTOR .

  class Pulse | current-index : Nat .
    subclass Pulse < AtomicActor .
  eq ^ Pulse = AtomicActor .

---------------------------------------------------------------------
--- Variable Declaration
---------------------------------------------------------------------

  vars PORTS PARAMS : Configuration . var REST : ObjectConfiguration .
  var O : Oid . vars N : Nat .
  var VI VV : Value . var V V' : Value . var VL VL' : ValueList .
  
  
---------------------------------------------------------------------
--- Semantics Steps
---------------------------------------------------------------------

*** 0] init

*** 1] prefire

*** 2] portFixPoints 

  eq portFixPoints(
      < O : Pulse |
         status : enabled,
         current-index : N,
         parameters : < 'indexes : Parameter | value : VI >
                      < 'values : Parameter | value : VV > PARAMS, 
         ports : < 'trigger : InPort | status : present >
                 < 'output : OutPort | status : unknown > PORTS > 
      REST)
   = portFixPoints(
      < O : Pulse |
         ports : < 'trigger : InPort | > 
                 < 'output : OutPort | status : present, value : cMap(VI, VV, N) > PORTS > 
      REST) .
     
  op cMap : Value Value Nat -> Value .
  eq cMap({V, VL}, {V', VL'}, N)
   = if (V equals # N) == # true then V' else cMap({VL},{VL'},N) fi .
  eq cMap({()}, {VL}, N) = # 0 .

*** 3] postfire

  eq postfire(Pulse,
      < O : Pulse | current-index : N ,
                    ports : < 'trigger : InPort | status : present > PORTS >)
  = 
     postfire(Actor,
      < O : Pulse | current-index : s(N)>) .
      
endtom)
/**/
