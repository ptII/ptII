/***attr_Pulse***/
current-index : 0/**/

/***mapName($index, $value)***/
$index |-> $value/**/

/***semantics_Pulse***/
(tomod PULSE is
  inc ACTOR .

  class Pulse | current-index : Nat .
    subclass Pulse < Actor .
  eq ^ Pulse = Actor .

  var O : Oid . var REST : ObjectConfiguration .
  var PORTS : Configuration .  vars PI PI' : PortId .
  var AM : AssignMap . var MEM : Memory .
  var VI VV : Value . var EI EV : Exp .
  var V V' : Value . var VL VL' : ValueList .
  vars N : Nat .
  
---------------------------------------------------------------------
--- Semantics Steps
---------------------------------------------------------------------

  --- set each status of ports to 'unknown'
  eq prefire(Pulse, 
    < O : Pulse | 
      parameters : ('indexes |-> EI ; 'values |-> EV ; AM)
    >) 
   = prefire(^ Pulse, 
    < O : Pulse | 
      store : 'indexes |-> k(EI) ; 'values |-> k(EV)
    >) .

  eq portFixPoints(
     < O : Pulse |
       status : enabled,
       ports :
         < PI : InPort | status : absent >
         < PI' : OutPort | status : unknown >
         PORTS
     > REST)
   = portFixPoints(
     < O : Pulse |
       ports :
         < PI : InPort | >
         < PI' : OutPort | status : absent >
         PORTS
     > REST) .

  eq portFixPoints(
     < O : Pulse |
       status : enabled,
       current-index : N,
       store : ('indexes |-> VI ; 'values |-> VV ; MEM),
       ports :
         < PI : InPort | status : present >
         < PI' : OutPort | status : unknown >
         PORTS
     > REST)
   = portFixPoints(
     < O : Pulse |
       ports :
         < PI : InPort | >
         < PI' : OutPort | status : present, 
                           value : cMap(VI, VV, N) >
         PORTS
     > REST) .
     
  op cMap : Value Value Nat -> Value .
  eq cMap({V, VL}, {V', VL'}, N)
   = if (V equals # N) == # true then V' 
     else cMap({VL},{VL'},N) fi .
  eq cMap({()}, {VL}, N) = # 0 .

  eq postfire(Pulse,
    < O : Pulse |
      current-index : N ,
      ports : < PI : InPort | status : present > PORTS
    >)
  = postfire(^ Pulse,
    < O : Pulse |
      current-index : s(N)
    >) .
endtom)
/**/
