/***attr_TimedPlotter***/
current-time : 0,
event-history : emptyHistory/**/

/***semantics_TimedPlotter***/
(tomod TIMED-PLOTTER-ACTOR is
  inc ATOMIC-ACTOR .
  inc OBJECT-WITH-TIMER .

  class TimedPlotter | 
    event-history : EventHistory .
    subclass TimedPlotter < AtomicActor TimeObj .
  eq ^ TimedPlotter = AtomicActor .

  sort EventPair  EventHistory .
  subsort EventPair < EventHistory .
  op source:_time:_value:_ : EPortId Time Value -> EventPair [ctor] . --- multiinput
  op time:_value:_ : Time Value -> EventPair [ctor] .                 --- singleinput
  op emptyHistory : -> EventHistory [ctor] .
  op _++_ : EventHistory EventHistory -> EventHistory [ctor assoc id: emptyHistory] .

---------------------------------------------------------------------
--- Variable Declaration
---------------------------------------------------------------------
  
  vars PORTS : Configuration . var EH : EventHistory .
  vars PI PI' : PortId . vars O : Oid . var T : Time . var V : Value .

---------------------------------------------------------------------
--- Semantics Steps
---------------------------------------------------------------------

*** 0] init

*** 1] prefire

*** 2] portFixPoints 

*** 3] postfire

  eq postfire(TimedPlotter,
      < O : TimedPlotter | current-time : T, event-history : EH, ports : PORTS >)
   = postfire(Actor,
      < O : TimedPlotter | event-history : EH ++ genEventHistory(T, PORTS) >) .

    op genEventHistory : Time Configuration ~> EventHistory .
    
    --- multi input 
    eq genEventHistory(T, < 'input # (O ! PI) : InPort | status : present, value : V > PORTS)
     = (source: (O ! PI) time: T value: V) ++ genEventHistory(T, PORTS) .
     
    --- single input
    eq genEventHistory(T, < 'input : InPort | status : present, value : V > PORTS)
     = (time: T value: V) ++ genEventHistory(T, PORTS) .
     
    eq genEventHistory(T, PORTS) = emptyHistory [owise] .

endtom)
/**/
/***formal_TimedPlotter***/
(tomod CHECK-TIMED-PLOTTER-ACTOR is
  pr TIMED-PLOTTER-ACTOR .
  pr CHECK-ACTOR .
  
  var O : Oid . var EP : EventPair . var EH : EventHistory .  var NT : NzTime .
  
  --- equational abstraction of history
  eq < O : TimedPlotter | event-history : EP ++ EH >
   = < O : TimedPlotter | event-history : emptyHistory > .

  --- equational abstraction of the current time
  eq < O : TimedPlotter | current-time : NT >
   = < O : TimedPlotter | current-time : 0 > .
  
  --- NOTE: No coherent problem because there is only the executeStep rule.
endtom)
/**/