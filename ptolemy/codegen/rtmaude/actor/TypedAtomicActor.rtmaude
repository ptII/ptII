
/***semantics_TypedAtomicActor***/
(tomod ATOMIC-ACTOR is 
  inc ACTOR .

  class AtomicActor .
    subclass AtomicActor < Actor .
  eq ^ AtomicActor = Actor .

--- stable atomic actor
  mb (< O : AtomicActor | 
         ports : SPORTS:StableConfiguration,
         parameters : SPARAMS:StableConfiguration >) : StableObject .

---------------------------------------------------------------------
--- Variable Declaration
---------------------------------------------------------------------

  vars PORTS : Configuration .  vars REST : ObjectConfiguration .
  vars O : Oid .  vars PI PI' : PortId .  var PS : PortStatus .  

---------------------------------------------------------------------
--- Semantics Steps
---------------------------------------------------------------------

*** 0] init

*** 1] prefire

*** 2] portFixPoints 
  --- if all input ports in atomic actors are absent, 
  --- then every unknown out port is absent.
  ceq portFixPoints(
      < O : AtomicActor | 
         ports : < PI' : InPort | status : absent >
                 < PI : OutPort | status : unknown > PORTS > 
      REST)
  =
      portFixPoints(
      < O : AtomicActor |
         ports : < PI' : InPort | status : absent >
                 < PI : OutPort | status : absent >
                 setUnknownOutPortsAbsent(PORTS) > 
      REST)
   if allInputPortsAbsent?(PORTS) .

*** 3] postfire

endtom)
/**/


