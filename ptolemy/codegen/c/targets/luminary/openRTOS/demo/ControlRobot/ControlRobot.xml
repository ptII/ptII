<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="ControlRobot" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="7.1.devel">
    </property>
    <property name="PN Director" class="ptolemy.domains.pn.kernel.PNDirector">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[5.0, 205.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-4, -4, 996, 776}, maximized=true}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[781, 658]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.25">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{186.635135135135, 202.554054054054}">
    </property>
    <property name="CCodeGenerator" class="ptolemy.codegen.c.kernel.CCodeGenerator">
        <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
        </property>
        <property name="compile" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="generateJNI" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="inline" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="measureTime" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="run" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="sourceLineBinding" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="target" class="ptolemy.data.expr.StringParameter" value="luminary">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[5.0, 265.0]">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This model illustrates the concurrent control in manipulating &#10;the behavior of the iRobot. Through invoking the CodeGenerator,&#10;this model can be directly transformed into executable code&#10;that runs on the OpenRTOS+Luminary target, which in turn &#10;interface with the iRobot through a serial connection. Generating&#10;multitasking code can overlap computation with I/O time, which&#10;greatly benefits performance and doing more sophisticated control.&#10;&#10;Author: Man-Kit Leung">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-85.0, -25.0]">
        </property>
    </property>
    <property name="Image" class="ptolemy.vergil.kernel.attributes.ImageAttribute">
        <property name="source" class="ptolemy.data.expr.FileParameter" value="irobotCreate.jpg">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[70.0, 125.0]">
        </property>
    </property>
    <property name="Image2" class="ptolemy.vergil.kernel.attributes.ImageAttribute">
        <property name="source" class="ptolemy.data.expr.FileParameter" value="luminary.jpg">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[355.0, 120.0]">
        </property>
    </property>
    <property name="Arrow" class="ptolemy.vergil.kernel.attributes.ArrowAttribute">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[245.0, 270.0]">
        </property>
        <property name="lineWidth" class="ptolemy.data.expr.Parameter" value="10.0">
        </property>
        <property name="lineColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,0.2,0.2,1.0}">
        </property>
        <property name="y" class="ptolemy.data.expr.Parameter" value="-50.0">
        </property>
        <property name="arrowWidth" class="ptolemy.data.expr.Parameter" value="20.0">
        </property>
    </property>
    <entity name="ModalModel" class="ptolemy.domains.fsm.modal.ModalModel">
        <property name="_tableauFactory" class="ptolemy.vergil.fsm.modal.ModalTableauFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-10.0, 330.0]">
        </property>
        <property name="_stackSize" class="ptolemy.data.expr.Parameter" value="150">
        </property>
        <entity name="_Controller" class="ptolemy.domains.fsm.modal.ModalController">
            <property name="_library" class="ptolemy.moml.LibraryAttribute">
                <configure>
        <entity name="state library" class="ptolemy.kernel.CompositeEntity"><input source="ptolemy/configs/basicUtilities.xml"></input><entity name="state" class="ptolemy.domains.fsm.kernel.State"><property name="_centerName" class="ptolemy.kernel.util.Attribute"></property><property name="_controllerFactory" class="ptolemy.vergil.fsm.modal.HierarchicalStateControllerFactory"></property></entity></entity>
      </configure>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={104, 125, 815, 518}, maximized=false}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[600, 400]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{300.0, 200.0}">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="The top level is modeled as a ModalModel because&#10;we need to execute some initialization procedures before&#10;going into the reactive state.&#10;">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[95.0, 70.0]">
                </property>
            </property>
            <entity name="Init" class="ptolemy.domains.fsm.kernel.State">
                <property name="refinementName" class="ptolemy.kernel.util.StringAttribute" value="Init">
                </property>
                <property name="isInitialState" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
                <property name="_controllerFactory" class="ptolemy.vergil.fsm.modal.HierarchicalStateControllerFactory">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[135.0, 215.0]">
                </property>
            </entity>
            <entity name="Reactive" class="ptolemy.domains.fsm.kernel.State">
                <property name="refinementName" class="ptolemy.kernel.util.StringAttribute" value="Reactive">
                </property>
                <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="true">
                </property>
                <property name="_controllerFactory" class="ptolemy.vergil.fsm.modal.HierarchicalStateControllerFactory">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[275.0, 220.0]">
                </property>
            </entity>
            <relation name="relation" class="ptolemy.domains.fsm.kernel.Transition">
                <property name="annotation" class="ptolemy.data.expr.StringParameter" value="">
                </property>
                <property name="exitAngle" class="ptolemy.data.expr.Parameter" value="-1.3878855385089603">
                </property>
                <property name="gamma" class="ptolemy.data.expr.Parameter" value="-0.0147965758328474">
                </property>
                <property name="reset" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <property name="preemptive" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <property name="defaultTransition" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="nondeterministic" class="ptolemy.data.expr.Parameter" value="false">
                </property>
            </relation>
            <link port="Init.outgoingPort" relation="relation"/>
            <link port="Reactive.incomingPort" relation="relation"/>
        </entity>
        <entity name="Init" class="ptolemy.domains.fsm.modal.Refinement">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={139, 147, 815, 518}, maximized=false}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[600, 400]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{300.0, 200.0}">
            </property>
            <property name="SDF Director" class="ptolemy.domains.sdf.kernel.SDFDirector">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[140.0, 90.0]">
                </property>
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This contains the initialization code, which basically&#10;consists of a series of serial commands:&#10;">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="{235.0, 25.0}">
                </property>
            </property>
            <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="textSize" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="&#10;        UARTCharPut(UART1_BASE, 128);&#10;	vTaskDelay( (portTickType) 500);&#10;&#10;        // Full Mode.&#10;        UARTCharPut(UART1_BASE, 132);&#10;        &#10;	// Turn on LEDs.&#10;        UARTCharPut(UART1_BASE, 139);&#10;        UARTCharPut(UART1_BASE, 10);&#10;        UARTCharPut(UART1_BASE, 127);	&#10;        UARTCharPut(UART1_BASE, 255);	&#10;	vTaskDelay( (portTickType) 200);&#10;&#10;	// Request Streaming data.&#10;        UARTCharPut(UART1_BASE, 148);&#10;        UARTCharPut(UART1_BASE, 2);&#10;        UARTCharPut(UART1_BASE, 18);	// Buttons (bit 0 for Play, bit 2 for Advance)&#10;        UARTCharPut(UART1_BASE, 37);	// Song Playing&#10;	...">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[265.0, 70.0]">
                </property>
            </property>
            <entity name="Init" class="ptolemy.actor.lib.jni.EmbeddedCActor">
                <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                    <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                    </property>
                </property>
                <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                    <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                    </property>
                </property>
                <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                    <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                    </property>
                </property>
                <property name="invokeJNI" class="ptolemy.data.expr.Parameter" value="true">
                    <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                    </property>
                </property>
                <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                    <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                    </property>
                </property>
                <property name="embeddedCCode" class="ptolemy.kernel.util.StringAttribute" value="/***fileDependencies***/&#10;/**/&#10;&#10;/***preinitBlock***/&#10;/**/&#10;&#10;/***initBlock***/&#10;//char msg[15];&#10;//xOLEDMessage xMessage;&#10;//xMessage.pcMessage = msg;&#10;/**/&#10;&#10;/***fireBlock***/&#10;&#10;//acquire mutex;&#10;&#10;// Send UART control signals.&#10;&#10;// Start.&#10;        UARTCharPut(UART1_BASE, 128);&#10;	vTaskDelay( (portTickType) 500);&#10;&#10;        // Full Mode.&#10;        UARTCharPut(UART1_BASE, 132);&#10;        &#10;	// Turn on LEDs.&#10;        UARTCharPut(UART1_BASE, 139);&#10;        UARTCharPut(UART1_BASE, 10);&#10;        UARTCharPut(UART1_BASE, 127);	&#10;        UARTCharPut(UART1_BASE, 255);	&#10;	vTaskDelay( (portTickType) 200);&#10;&#10;	// Drive straight.&#10;        UARTCharPut(UART1_BASE, 137);&#10;        UARTCharPut(UART1_BASE, 8);&#10;        UARTCharPut(UART1_BASE, 0);	&#10;        UARTCharPut(UART1_BASE, 0);	&#10;        UARTCharPut(UART1_BASE, 0);	&#10;&#10;	// Request Streaming data.&#10;        UARTCharPut(UART1_BASE, 148);&#10;        UARTCharPut(UART1_BASE, 2);&#10;        UARTCharPut(UART1_BASE, 18);	// Buttons (bit 0 for Play, bit 2 for Advance)&#10;        UARTCharPut(UART1_BASE, 37);	// Song Playing&#10;&#10;//sprintf(msg, &quot;Activate Robot...&quot;);&#10;//xQueueSend( xOLEDQueue, &amp;xMessage, 100);&#10;&#10;/**/&#10;&#10;/***wrapupBlock***/&#10;/**/&#10;&#10;">
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="embeddedCCode">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[155.0, 140.0]">
                </property>
                <property name="CodeGenerator_AutoAdded" class="ptolemy.codegen.c.kernel.CCodeGenerator">
                    <property name="allowDynamicMultiportReference" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                        <property name="allowFiles" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="allowDirectories" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                    </property>
                    <property name="compile" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="compileTarget" class="ptolemy.data.expr.StringParameter" value="">
                    </property>
                    <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                    </property>
                    <property name="generateComment" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="generateCpp" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="generateJNI" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="measureTime" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="padBuffers" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="run" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="sourceLineBinding" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="target" class="ptolemy.data.expr.StringParameter" value="default">
                    </property>
                </property>
                <property name="_stackSize" class="ptolemy.data.expr.Parameter" value="100">
                </property>
            </entity>
        </entity>
        <entity name="Reactive" class="ptolemy.domains.fsm.modal.Refinement">
            <property name="PN Director" class="ptolemy.domains.pn.kernel.PNDirector">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[35.0, 235.0]">
                </property>
            </property>
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={-4, -4, 996, 776}, maximized=true}">
            </property>
            <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[781, 658]">
            </property>
            <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.25">
            </property>
            <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{204.9636824324323, 402.3588471283784}">
            </property>
            <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This models the concurrency and independence of the control&#10;for the movement of the robot and its audio. They are modeled&#10;using to unconnected actors under the Process Network semantics.&#10;In addition, monitor units can also be active during the execution.&#10;The output of the PlayMidi actor is a boolean control token&#10;that is used to trigger the monitor units (LCD and WebServ).&#10;The connection in PN can serve as reliable data communication &#10;channel but can also express control flow semantics, as it is&#10;the case between some of these actors.">
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[-20.0, 265.0]">
                </property>
            </property>
            <entity name="PlayMidi" class="ptolemy.actor.TypedCompositeActor">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[25.0, 470.0]">
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="The music played by the robot is supported by two main processes:&#10;one for uploading the music, while the second sends the play command &#10;when the uploading is done. The uploader can put up to eight songs&#10;in the robot. Each song consists of a maximum of 16 midi notes. This&#10;gives the uploader and player a buffer to execute asynchronously. &#10;However, we use only a single token to synchronize their interaction&#10;in this model. The effect is similar to a mutex. We can also increase&#10;the number of initial tokens to achieve the desired asynchrony.">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[95.0, 60.0]">
                    </property>
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={104, 125, 815, 518}, maximized=false}">
                </property>
                <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[600, 400]">
                </property>
                <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
                </property>
                <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{300.0, 200.0}">
                </property>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[177.0, 245.0]">
                    </property>
                </port>
                <entity name="UploadSong" class="ptolemy.actor.lib.jni.EmbeddedCActor">
                    <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="invokeJNI" class="ptolemy.data.expr.Parameter" value="true">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="embeddedCCode" class="ptolemy.kernel.util.StringAttribute" value="/***fileDependencies***/&#10;/**/&#10;&#10;/***preinitBlock***/&#10;/**/&#10;&#10;/***initBlock***/&#10;char msg[25];&#10;&#10;// starting at the C chord.&#10;char chord = 38;&#10;char major[] = {1,3,5,6,8,10,12,13};&#10;char note;&#10;int $actorSymbol(i);&#10;int $actorSymbol(songIndex) = 0;&#10;xOLEDMessage xMessage;&#10;xMessage.pcMessage = msg;&#10;/**/&#10;&#10;/***fireBlock***/&#10;$get(input, 0)&#10;sprintf(msg, &quot;UploadSong&quot;);&#10;xQueueSend( xOLEDQueue, &amp;xMessage, 100);&#10;&#10;UARTCharPut(UART1_BASE, 140);&#10;UARTCharPut(UART1_BASE, $actorSymbol(songIndex)++ % 8);&#10;UARTCharPut(UART1_BASE, 8);&#10;&#10;// acquire mutex;&#10;for ($actorSymbol(i) = 0; $actorSymbol(i) &lt; 8; $actorSymbol(i)++) {&#10;    note = chord + major[$actorSymbol(i)];&#10;    &#10;    // Send UART control signal.&#10;    UARTCharPut(UART1_BASE, note);&#10;    UARTCharPut(UART1_BASE, $val(duration)); &#10;}&#10;&#10;chord++;&#10;if (chord &gt; 60) {&#10;	chord = 38; &#10;}&#10;&#10;// release mutex&#10;&#10;$send(output, 0)&#10;/**/&#10;&#10;/***wrapupBlock***/&#10;/**/&#10;&#10;">
                    </property>
                    <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                        <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="embeddedCCode">
                        </property>
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[362.0, 285.0]">
                    </property>
                    <property name="CodeGenerator_AutoAdded" class="ptolemy.codegen.c.kernel.CCodeGenerator">
                        <property name="allowDynamicMultiportReference" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                            <property name="allowFiles" class="ptolemy.data.expr.Parameter" value="false">
                            </property>
                            <property name="allowDirectories" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                        </property>
                        <property name="compile" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="compileTarget" class="ptolemy.data.expr.StringParameter" value="">
                        </property>
                        <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                        </property>
                        <property name="generateComment" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="generateCpp" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="generateJNI" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="measureTime" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="padBuffers" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="run" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="sourceLineBinding" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="target" class="ptolemy.data.expr.StringParameter" value="default">
                        </property>
                    </property>
                    <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                        <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="-1.0, 0.0">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="60.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="40.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,1.0,1.0}">
                            </property>
                        </property>
                        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                            <property name="textSize" class="ptolemy.data.expr.Parameter" value="10">
                            </property>
                            <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.8,1.0}">
                            </property>
                            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="101010001&#10;010101100">
                            </property>
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[-32.0, -14.0]">
                            </property>
                        </property>
                    </property>
                    <property name="_stackSize" class="ptolemy.data.expr.Parameter" value="100">
                    </property>
                    <property name="duration" class="ptolemy.data.expr.Parameter" value="16">
                    </property>
                    <port name="input" class="ptolemy.actor.TypedIOPort">
                        <property name="input"/>
                        <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
                        </property>
                    </port>
                    <port name="output" class="ptolemy.actor.TypedIOPort">
                        <property name="output"/>
                        <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
                        </property>
                    </port>
                </entity>
                <entity name="PlaySong" class="ptolemy.actor.lib.jni.EmbeddedCActor">
                    <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="invokeJNI" class="ptolemy.data.expr.Parameter" value="true">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="embeddedCCode" class="ptolemy.kernel.util.StringAttribute" value="/***fileDependencies***/&#10;/**/&#10;&#10;/***preinitBlock***/&#10;/**/&#10;&#10;/***initBlock***/&#10;int $actorSymbol(songIndex) = 0;&#10;char msg[10];&#10;xOLEDMessage xMessage;&#10;xMessage.pcMessage = msg;&#10;/**/&#10;&#10;/***fireBlock***/&#10;$get(input, 0)&#10;sprintf(msg, &quot;PlaySong&quot;);&#10;xQueueSend( xOLEDQueue, &amp;xMessage, 100);&#10;&#10;vTaskDelay( (portTickType) 200);&#10;&#10;// acquire mutex;&#10;// Send UART control signal.&#10;UARTCharPut(UART1_BASE, 141);&#10;UARTCharPut(UART1_BASE, $actorSymbol(songIndex)++ % 8);&#10;// release mutex&#10;&#10;$send(output, 0)&#10;/**/&#10;&#10;/***wrapupBlock***/&#10;/**/&#10;&#10;">
                    </property>
                    <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                        <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="embeddedCCode">
                        </property>
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[200.0, 370.0]">
                    </property>
                    <property name="CodeGenerator_AutoAdded" class="ptolemy.codegen.c.kernel.CCodeGenerator">
                        <property name="allowDynamicMultiportReference" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                            <property name="allowFiles" class="ptolemy.data.expr.Parameter" value="false">
                            </property>
                            <property name="allowDirectories" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                        </property>
                        <property name="compile" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="compileTarget" class="ptolemy.data.expr.StringParameter" value="">
                        </property>
                        <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                        </property>
                        <property name="generateComment" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="generateCpp" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="generateJNI" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="measureTime" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="padBuffers" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="run" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="sourceLineBinding" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="target" class="ptolemy.data.expr.StringParameter" value="default">
                        </property>
                    </property>
                    <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                        <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="-1.0, 0.0">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="60.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="40.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,1.0,1.0}">
                            </property>
                        </property>
                        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                            <property name="textSize" class="ptolemy.data.expr.Parameter" value="10">
                            </property>
                            <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.8,1.0}">
                            </property>
                            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="101010001&#10;010101100">
                            </property>
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[-32.0, -14.0]">
                            </property>
                        </property>
                    </property>
                    <property name="_stackSize" class="ptolemy.data.expr.Parameter" value="100">
                    </property>
                    <property name="_flipPortsHorizontal" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <port name="input" class="ptolemy.actor.TypedIOPort">
                        <property name="input"/>
                        <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
                        </property>
                    </port>
                    <port name="output" class="ptolemy.actor.TypedIOPort">
                        <property name="output"/>
                        <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
                        </property>
                    </port>
                </entity>
                <entity name="InitialToken" class="ptolemy.domains.sdf.lib.SampleDelay">
                    <property name="initialOutputs" class="ptolemy.data.expr.Parameter" value="{true}">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[255.0, 285.0]">
                    </property>
                    <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                        <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[-1.0, -1.0]">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="30">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="30">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                            </property>
                        </property>
                    </property>
                </entity>
                <relation name="relation3" class="ptolemy.actor.TypedIORelation">
                    <property name="width" class="ptolemy.data.expr.Parameter" value="1">
                    </property>
                </relation>
                <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                    <property name="width" class="ptolemy.data.expr.Parameter" value="1">
                    </property>
                </relation>
                <relation name="relation4" class="ptolemy.actor.TypedIORelation">
                    <property name="width" class="ptolemy.data.expr.Parameter" value="1">
                    </property>
                    <vertex name="vertex1" value="[142.0, 285.0]">
                    </vertex>
                </relation>
                <link port="output" relation="relation4"/>
                <link port="UploadSong.input" relation="relation3"/>
                <link port="UploadSong.output" relation="relation2"/>
                <link port="PlaySong.input" relation="relation2"/>
                <link port="PlaySong.output" relation="relation4"/>
                <link port="InitialToken.input" relation="relation4"/>
                <link port="InitialToken.output" relation="relation3"/>
            </entity>
            <entity name="Movement" class="ptolemy.actor.TypedCompositeActor">
                <property name="_location" class="ptolemy.kernel.util.Location" value="[25.0, 555.0]">
                </property>
                <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                    <property name="text" class="ptolemy.kernel.util.StringAttribute" value="The input to Turn and Drive&#10;actor are control tokens,&#10;which is used to control&#10;precisely when to fire them.&#10;">
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[75.0, 0.0]">
                    </property>
                </property>
                <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={111, 218, 815, 518}, maximized=false}">
                </property>
                <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[600, 400]">
                </property>
                <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
                </property>
                <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{188.0007390202703, 127.3327702702703}">
                </property>
                <entity name="Buttons" class="ptolemy.actor.lib.jni.EmbeddedCActor">
                    <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                    </property>
                    <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                    </property>
                    <property name="invokeJNI" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="embeddedCCode" class="ptolemy.kernel.util.StringAttribute" value="/***fileDependencies***/&#10;/**/&#10;&#10;/***preinitBlock***/&#10;/* Status LED and Push Buttons pin definitions */&#10;#define LED             GPIO_PIN_0 /* PF0 */&#10;#define SELECT          GPIO_PIN_1 /* PF1 */&#10;#define UP              GPIO_PIN_0 /* PE0 */&#10;#define DOWN            GPIO_PIN_1 /* PE1 */&#10;#define LEFT            GPIO_PIN_2 /* PE2 */&#10;#define RIGHT           GPIO_PIN_3 /* PE3 */&#10;#define BUTTON         (UP | DOWN | LEFT | RIGHT)&#10;&#10;volatile unsigned char buttons; // Button States&#10;/**/&#10;&#10;/***initBlock***/&#10;char msg[10];&#10;xOLEDMessage xMessage;&#10;xMessage.pcMessage = msg;&#10;/**/&#10;&#10;/***fireBlock***/&#10;&#10;// Read UART control signal.&#10;&#10;buttons = GPIOPinRead(GPIO_PORTE_BASE, BUTTON) ^ 0xF;&#10;&#10;//if (buttons) {&#10;//    sprintf(msg, &quot;B %d&quot;, buttons);&#10;//    xQueueSend( xOLEDQueue, &amp;xMessage, 100);&#10;//}&#10;&#10;if (buttons &amp; 0x1) {&#10;    $ref(up) = 1;&#10;    $send(up, 0)&#10;}&#10;if (buttons &amp; 0x2) {&#10;    $ref(down) = 1;&#10;    $send(down, 0)&#10;} &#10;if (buttons &amp; 0x4) {&#10;    $ref(left) = 1;&#10;    $send(left, 0)&#10;} &#10;&#10;$ref(right) = (buttons &amp; 0x8) &gt; 0? 1 : 0;&#10;$send(right, 0)&#10;&#10;//if (buttons &amp; 0x8) {&#10;//    $ref(right) = 1;&#10;//    $send(right, 0)&#10;//}&#10;&#10;vTaskDelay(100);&#10;&#10;&#10;&#10;/**/&#10;&#10;/***wrapupBlock***/&#10;/**/&#10;&#10;">
                    </property>
                    <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                        <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="embeddedCCode">
                        </property>
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 140.0]">
                    </property>
                    <property name="CodeGenerator_AutoAdded" class="ptolemy.codegen.c.kernel.CCodeGenerator">
                        <property name="allowDynamicMultiportReference" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                            <property name="allowFiles" class="ptolemy.data.expr.Parameter" value="false">
                            </property>
                            <property name="allowDirectories" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                        </property>
                        <property name="compile" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="compileTarget" class="ptolemy.data.expr.StringParameter" value="">
                        </property>
                        <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                        </property>
                        <property name="generateComment" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="generateCpp" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="generateJNI" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="measureTime" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="padBuffers" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="run" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="sourceLineBinding" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="target" class="ptolemy.data.expr.StringParameter" value="default">
                        </property>
                    </property>
                    <property name="_stackSize" class="ptolemy.data.expr.StringParameter" value="150">
                    </property>
                    <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                        <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[1.0, -29.0]">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="24.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="25.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.8,0.8,0.8,1.0}">
                            </property>
                        </property>
                        <property name="ellipse" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[1.0, -29.0]">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="17.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="17.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                            </property>
                        </property>
                        <property name="rectangle4" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[1.0, 27.0]">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="24.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="25.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.8,0.8,0.8,1.0}">
                            </property>
                        </property>
                        <property name="ellipse4" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[1.0, 27.0]">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="17.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="17.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                            </property>
                        </property>
                        <property name="rectangle2" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[-13.0, -1.0]">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="24.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="25.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.8,0.8,0.8,1.0}">
                            </property>
                        </property>
                        <property name="ellipse2" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[-13.0, -1.0]">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="17.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="17.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                            </property>
                        </property>
                        <property name="rectangle3" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[15.0, -1.0]">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="24.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="25.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.8,0.8,0.8,1.0}">
                            </property>
                        </property>
                        <property name="ellipse3" class="ptolemy.vergil.kernel.attributes.EllipseAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[15.0, -1.0]">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="17.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="17.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                            </property>
                        </property>
                        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={17, 316, 815, 518}, maximized=false}">
                        </property>
                        <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[600, 400]">
                        </property>
                        <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="4.0">
                        </property>
                        <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{0.0, 0.0}">
                        </property>
                    </property>
                    <property name="_rotatePorts" class="ptolemy.data.expr.Parameter" value="0">
                        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
                        </property>
                    </property>
                    <port name="up" class="ptolemy.actor.TypedIOPort">
                        <property name="output"/>
                        <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
                        </property>
                        <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="NORTH">
                        </property>
                        <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                        </property>
                    </port>
                    <port name="down" class="ptolemy.actor.TypedIOPort">
                        <property name="output"/>
                        <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
                        </property>
                        <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="SOUTH">
                        </property>
                        <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                        </property>
                    </port>
                    <port name="left" class="ptolemy.actor.TypedIOPort">
                        <property name="output"/>
                        <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
                        </property>
                        <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="WEST">
                        </property>
                        <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                        </property>
                    </port>
                    <port name="right" class="ptolemy.actor.TypedIOPort">
                        <property name="output"/>
                        <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
                        </property>
                        <property name="_cardinal" class="ptolemy.kernel.util.StringAttribute" value="EAST">
                        </property>
                        <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="false">
                        </property>
                    </port>
                </entity>
                <entity name="Turn" class="ptolemy.actor.lib.jni.EmbeddedCActor">
                    <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="invokeJNI" class="ptolemy.data.expr.Parameter" value="true">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="embeddedCCode" class="ptolemy.kernel.util.StringAttribute" value="/***fileDependencies***/&#10;/**/&#10;&#10;/***preinitBlock***/&#10;/**/&#10;&#10;/***initBlock***/&#10;char msg[25];&#10;xOLEDMessage xMessage;&#10;xMessage.pcMessage = msg;&#10;/**/&#10;&#10;/***fireBlock***/&#10;$get(input, 0)&#10;sprintf(msg, &quot;Drive&quot;, $ref(input));&#10;xQueueSend( xOLEDQueue, &amp;xMessage, 100);&#10;&#10;//    acquire mutex;&#10;&#10;// Send UART control signal.&#10;&#10;// Drive straight.&#10;UARTCharPut(UART1_BASE, 137);&#10;UARTCharPut(UART1_BASE, 8);&#10;UARTCharPut(UART1_BASE, 0);&#10;UARTCharPut(UART1_BASE, 0);&#10;UARTCharPut(UART1_BASE, 0);&#10;&#10;&#10;/**/&#10;&#10;/***wrapupBlock***/&#10;/**/&#10;&#10;">
                    </property>
                    <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                        <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="embeddedCCode">
                        </property>
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 15.0]">
                    </property>
                    <property name="CodeGenerator_AutoAdded" class="ptolemy.codegen.c.kernel.CCodeGenerator">
                        <property name="allowDynamicMultiportReference" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                            <property name="allowFiles" class="ptolemy.data.expr.Parameter" value="false">
                            </property>
                            <property name="allowDirectories" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                        </property>
                        <property name="compile" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="compileTarget" class="ptolemy.data.expr.StringParameter" value="">
                        </property>
                        <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                        </property>
                        <property name="generateComment" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="generateCpp" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="generateJNI" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="measureTime" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="padBuffers" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="run" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="sourceLineBinding" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="target" class="ptolemy.data.expr.StringParameter" value="default">
                        </property>
                    </property>
                    <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                        <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="-1.0, 0.0">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="60.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="40.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,1.0,1.0}">
                            </property>
                        </property>
                        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                            <property name="textSize" class="ptolemy.data.expr.Parameter" value="10">
                            </property>
                            <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.8,1.0}">
                            </property>
                            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="101010001&#10;010101100">
                            </property>
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[-32.0, -14.0]">
                            </property>
                        </property>
                    </property>
                    <property name="_stackSize" class="ptolemy.data.expr.Parameter" value="100">
                    </property>
                    <property name="_rotatePorts" class="ptolemy.data.expr.Parameter" value="-90">
                    </property>
                    <port name="input" class="ptolemy.actor.TypedIOPort">
                        <property name="input"/>
                        <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
                        </property>
                    </port>
                </entity>
                <entity name="Stop" class="ptolemy.actor.lib.jni.EmbeddedCActor">
                    <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="invokeJNI" class="ptolemy.data.expr.Parameter" value="true">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                        <property name="style" class="ptolemy.actor.gui.style.HiddenStyle">
                        </property>
                    </property>
                    <property name="embeddedCCode" class="ptolemy.kernel.util.StringAttribute" value="/***fileDependencies***/&#10;/**/&#10;&#10;/***preinitBlock***/&#10;/**/&#10;&#10;/***initBlock***/&#10;char msg[25];&#10;xOLEDMessage xMessage;&#10;xMessage.pcMessage = msg;&#10;/**/&#10;&#10;/***fireBlock***/&#10;$get(input, 0)&#10;sprintf(msg, &quot;Drive&quot;, $ref(input));&#10;xQueueSend( xOLEDQueue, &amp;xMessage, 100);&#10;&#10;//    acquire mutex;&#10;&#10;// Send UART control signal.&#10;&#10;// Drive straight.&#10;UARTCharPut(UART1_BASE, 137);&#10;UARTCharPut(UART1_BASE, 255);&#10;UARTCharPut(UART1_BASE, 255);&#10;UARTCharPut(UART1_BASE, 255);&#10;UARTCharPut(UART1_BASE, 255);&#10;&#10;&#10;/**/&#10;&#10;/***wrapupBlock***/&#10;/**/&#10;&#10;">
                    </property>
                    <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                        <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="embeddedCCode">
                        </property>
                    </property>
                    <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 275.0]">
                    </property>
                    <property name="CodeGenerator_AutoAdded" class="ptolemy.codegen.c.kernel.CCodeGenerator">
                        <property name="allowDynamicMultiportReference" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                            <property name="allowFiles" class="ptolemy.data.expr.Parameter" value="false">
                            </property>
                            <property name="allowDirectories" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                        </property>
                        <property name="compile" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="compileTarget" class="ptolemy.data.expr.StringParameter" value="">
                        </property>
                        <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                        </property>
                        <property name="generateComment" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="generateCpp" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="generateJNI" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="measureTime" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="padBuffers" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="run" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="sourceLineBinding" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="target" class="ptolemy.data.expr.StringParameter" value="default">
                        </property>
                    </property>
                    <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                        <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                            <property name="_location" class="ptolemy.kernel.util.Location" value="-1.0, 0.0">
                            </property>
                            <property name="width" class="ptolemy.data.expr.Parameter" value="60.0">
                            </property>
                            <property name="height" class="ptolemy.data.expr.Parameter" value="40.0">
                            </property>
                            <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                            </property>
                            <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,1.0,1.0}">
                            </property>
                        </property>
                        <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
                            <property name="textSize" class="ptolemy.data.expr.Parameter" value="10">
                            </property>
                            <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.8,1.0}">
                            </property>
                            <property name="text" class="ptolemy.kernel.util.StringAttribute" value="101010001&#10;010101100">
                            </property>
                            <property name="_location" class="ptolemy.kernel.util.Location" value="[-32.0, -14.0]">
                            </property>
                        </property>
                    </property>
                    <property name="_stackSize" class="ptolemy.data.expr.Parameter" value="100">
                    </property>
                    <property name="_rotatePorts" class="ptolemy.data.expr.Parameter" value="90">
                        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
                        </property>
                    </property>
                    <port name="input" class="ptolemy.actor.TypedIOPort">
                        <property name="input"/>
                        <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
                        </property>
                    </port>
                </entity>
                <relation name="relation" class="ptolemy.actor.TypedIORelation">
                    <property name="width" class="ptolemy.data.expr.Parameter" value="1">
                    </property>
                </relation>
                <relation name="relation2" class="ptolemy.actor.TypedIORelation">
                    <property name="width" class="ptolemy.data.expr.Parameter" value="1">
                    </property>
                </relation>
                <link port="Buttons.up" relation="relation"/>
                <link port="Buttons.down" relation="relation2"/>
                <link port="Turn.input" relation="relation"/>
                <link port="Stop.input" relation="relation2"/>
            </entity>
            <entity name="LCD" class="ptolemy.actor.lib.jni.EmbeddedCActor">
                <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                </property>
                <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                </property>
                <property name="invokeJNI" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="embeddedCCode" class="ptolemy.kernel.util.StringAttribute" value="/***fileDependencies***/&#10;/**/&#10;&#10;/***preinitBlock***/&#10;/**/&#10;&#10;/***initBlock***/&#10;    xOLEDMessage xMessage;&#10;    unsigned portLONG ulY, ulMaxY;&#10;    static portCHAR cMessage[ mainMAX_MSG_LEN ];&#10;    extern volatile unsigned portLONG ulMaxJitter;&#10;    unsigned portBASE_TYPE uxUnusedStackOnEntry;&#10;    const unsigned portCHAR *pucImage;&#10;    /* Functions to access the OLED.  The one used depends on the dev kit&#10;    being used. */&#10;    void ( *vOLEDInit )( unsigned portLONG ) = NULL;&#10;    void ( *vOLEDStringDraw )( const portCHAR *, unsigned portLONG, unsigned portLONG, unsigned portCHAR ) = NULL;&#10;    void ( *vOLEDImageDraw )( const unsigned portCHAR *, unsigned portLONG, unsigned portLONG, unsigned portLONG, unsigned portLONG ) = NULL;&#10;    void ( *vOLEDClear )( void ) = NULL;&#10;    /* Just for demo purposes. */&#10;    uxUnusedStackOnEntry = uxTaskGetStackHighWaterMark( NULL );&#10;    /* Map the OLED access functions to the driver functions that are appropriate&#10;    for the evaluation kit being used. */&#10;    switch( HWREG( SYSCTL_DID1 ) &amp; SYSCTL_DID1_PRTNO_MASK )&#10;    {&#10;        case SYSCTL_DID1_PRTNO_6965 :&#10;        case SYSCTL_DID1_PRTNO_2965 : vOLEDInit = OSRAM128x64x4Init;&#10;        	vOLEDStringDraw = OSRAM128x64x4StringDraw;&#10;        	vOLEDImageDraw = OSRAM128x64x4ImageDraw;&#10;        	vOLEDClear = OSRAM128x64x4Clear;&#10;        	ulMaxY = mainMAX_ROWS_64;&#10;        	pucImage = pucBasicBitmap;&#10;        	break;&#10;        case SYSCTL_DID1_PRTNO_1968 :&#10;        case SYSCTL_DID1_PRTNO_8962 : vOLEDInit = RIT128x96x4Init;&#10;        	vOLEDStringDraw = RIT128x96x4StringDraw;&#10;        	vOLEDImageDraw = RIT128x96x4ImageDraw;&#10;        	vOLEDClear = RIT128x96x4Clear;&#10;        	ulMaxY = mainMAX_ROWS_96;&#10;        	pucImage = pucBasicBitmap;&#10;        	break;&#10;        default : vOLEDInit = vFormike128x128x16Init;&#10;        	vOLEDStringDraw = vFormike128x128x16StringDraw;&#10;        	vOLEDImageDraw = vFormike128x128x16ImageDraw;&#10;        	vOLEDClear = vFormike128x128x16Clear;&#10;        	ulMaxY = mainMAX_ROWS_128;&#10;        	pucImage = pucGrLibBitmap;&#10;        	break;&#10;    }&#10;    ulY = ulMaxY;&#10;    /* Initialise the OLED and display a startup message. */&#10;    vOLEDInit( ulSSI_FREQUENCY );&#10;    vOLEDStringDraw( &quot;Running OpenRTOS&quot;, 0, 0, mainFULL_SCALE );&#10;    vOLEDImageDraw( pucImage, 0, mainCHARACTER_HEIGHT + 1, bmpBITMAP_WIDTH, bmpBITMAP_HEIGHT );&#10;/**/&#10;&#10;/***fireBlock***/&#10;        /* Wait for a message to arrive that requires displaying. */&#10;        xQueueReceive( xOLEDQueue, &amp;xMessage, portMAX_DELAY );&#10;	&#10;$get(input, 0)&#10;&#10;        /* Write the message on the next available row. */&#10;        ulY += mainCHARACTER_HEIGHT;&#10;        if( ulY &gt;= ulMaxY )&#10;        {&#10;            ulY = mainCHARACTER_HEIGHT;&#10;            vOLEDClear();&#10;            vOLEDStringDraw( $val(title), 0, 0, mainFULL_SCALE );&#10;        }&#10;        /* Display the message along with the maximum jitter time from the&#10;        high priority time test. */&#10;        sprintf( cMessage, &quot;%s [%uns]&quot;, xMessage.pcMessage, ulMaxJitter * mainNS_PER_CLOCK );&#10;        vOLEDStringDraw( cMessage, 0, ulY, mainFULL_SCALE );&#10;&#10;/**/&#10;&#10;/***wrapupBlock***/&#10;/**/&#10;&#10;&#10;">
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="embeddedCCode">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[190.0, 470.0]">
                </property>
                <property name="CodeGenerator_AutoAdded" class="ptolemy.codegen.c.kernel.CCodeGenerator">
                    <property name="allowDynamicMultiportReference" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                        <property name="allowFiles" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="allowDirectories" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                    </property>
                    <property name="compile" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="compileTarget" class="ptolemy.data.expr.StringParameter" value="">
                    </property>
                    <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                    </property>
                    <property name="generateComment" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="generateCpp" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="generateJNI" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="measureTime" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="padBuffers" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="run" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="sourceLineBinding" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="target" class="ptolemy.data.expr.StringParameter" value="default">
                    </property>
                </property>
                <property name="title" class="ptolemy.data.expr.StringParameter" value="Live Demo">
                    <property name="style" class="ptolemy.actor.gui.style.LineStyle">
                    </property>
                </property>
                <property name="_stackSize" class="ptolemy.data.expr.Parameter" value="125">
                    <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
                    </property>
                </property>
                <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                    <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                        <property name="_location" class="ptolemy.kernel.util.Location" value="0.0, 0.0">
                        </property>
                        <property name="width" class="ptolemy.data.expr.Parameter" value="60.0">
                        </property>
                        <property name="height" class="ptolemy.data.expr.Parameter" value="40.0">
                        </property>
                        <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.6,0.6,0.6,1.0}">
                        </property>
                    </property>
                    <property name="rectangle2" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                        <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 0.0]">
                        </property>
                        <property name="width" class="ptolemy.data.expr.Parameter" value="50.0">
                        </property>
                        <property name="height" class="ptolemy.data.expr.Parameter" value="30.0">
                        </property>
                        <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.2,0.2,0.2,1.0}">
                        </property>
                    </property>
                    <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                        <property name="_location" class="ptolemy.kernel.util.Location" value="[-22.0, -9.0]">
                        </property>
                        <property name="lineWidth" class="ptolemy.data.expr.Parameter" value="2.0">
                        </property>
                        <property name="lineColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,1.0,1.0}">
                        </property>
                        <property name="x" class="ptolemy.data.expr.Parameter" value="17.0">
                        </property>
                        <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                        </property>
                    </property>
                    <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                        <property name="_location" class="ptolemy.kernel.util.Location" value="[-22.0, -3.0]">
                        </property>
                        <property name="lineWidth" class="ptolemy.data.expr.Parameter" value="2.0">
                        </property>
                        <property name="lineColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,1.0,1.0}">
                        </property>
                        <property name="x" class="ptolemy.data.expr.Parameter" value="23.0">
                        </property>
                        <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                        </property>
                    </property>
                    <property name="line3" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                        <property name="_location" class="ptolemy.kernel.util.Location" value="[-22.0, 3.0]">
                        </property>
                        <property name="lineWidth" class="ptolemy.data.expr.Parameter" value="2.0">
                        </property>
                        <property name="lineColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,1.0,1.0}">
                        </property>
                        <property name="x" class="ptolemy.data.expr.Parameter" value="10.0">
                        </property>
                        <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                        </property>
                    </property>
                    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={170, 0, 815, 518}, maximized=false}">
                    </property>
                    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[600, 400]">
                    </property>
                    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="4.0">
                    </property>
                    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{0.0, 0.0}">
                    </property>
                    <property name="line4" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                        <property name="_location" class="ptolemy.kernel.util.Location" value="[-22.0, 9.0]">
                        </property>
                        <property name="lineWidth" class="ptolemy.data.expr.Parameter" value="2.0">
                        </property>
                        <property name="lineColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,1.0,1.0,1.0}">
                        </property>
                        <property name="x" class="ptolemy.data.expr.Parameter" value="30.0">
                        </property>
                        <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                        </property>
                    </property>
                </property>
                <port name="input" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
            </entity>
            <entity name="WebServ" class="ptolemy.actor.lib.jni.EmbeddedCActor">
                <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                </property>
                <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                </property>
                <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                </property>
                <property name="invokeJNI" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                </property>
                <property name="embeddedCCode" class="ptolemy.kernel.util.StringAttribute" value="/***fileDependencies***/&#10;/**/&#10;&#10;/***preinitBlock***/&#10;/* uip includes. */&#10;#include &quot;hw_types.h&quot;&#10;#include &quot;uip.h&quot;&#10;#include &quot;uip_arp.h&quot;&#10;#include &quot;httpd.h&quot;&#10;#include &quot;timer.h&quot;&#10;#include &quot;clock-arch.h&quot;&#10;#include &quot;hw_ethernet.h&quot;&#10;#include &quot;ethernet.h&quot;&#10;#include &quot;hw_memmap.h&quot;&#10;#include &quot;lmi_flash.h&quot;&#10;#include &quot;sysctl.h&quot;&#10;&#10;/* Demo includes. */&#10;#include &quot;emac.h&quot;&#10;#include &quot;partest.h&quot;&#10;#include &quot;lcd_message.h&quot;&#10;&#10;struct timer {&#10;  clock_time_t start;&#10;  clock_time_t interval;&#10;};&#10;&#10;&#10;/*-----------------------------------------------------------*/&#10;&#10;/* IP address configuration. */&#10;#define uipIP_ADDR0		$val(ipAddress, 0)&#10;#define uipIP_ADDR1		$val(ipAddress, 1)&#10;#define uipIP_ADDR2		$val(ipAddress, 2)&#10;#define uipIP_ADDR3		$val(ipAddress, 3)	&#10;&#10;/* How long to wait before attempting to connect the MAC again. */&#10;#define uipINIT_WAIT    100&#10;&#10;/* Shortcut to the header within the Rx buffer. */&#10;#define xHeader ((struct uip_eth_hdr *) &amp;uip_buf[ 0 ])&#10;&#10;/* Standard constant. */&#10;#define uipTOTAL_FRAME_HEADER_SIZE	54&#10;&#10;/*-----------------------------------------------------------*/&#10;&#10;/*&#10; * Send the uIP buffer to the MAC.&#10; */&#10;static void prvENET_Send(void);&#10;&#10;/*&#10; * Setup the MAC address in the MAC itself, and in the uIP stack.&#10; */&#10;static void prvSetMACAddress( void );&#10;&#10;/*&#10; * Port functions required by the uIP stack.&#10; */&#10;void clock_init( void );&#10;clock_time_t clock_time( void );&#10;&#10;/*-----------------------------------------------------------*/&#10;&#10;/* The semaphore used by the ISR to wake the uIP task. */&#10;extern xSemaphoreHandle xEMACSemaphore;&#10;&#10;/*-----------------------------------------------------------*/&#10;&#10;void clock_init(void)&#10;{&#10;	/* This is done when the scheduler starts. */&#10;}&#10;/*-----------------------------------------------------------*/&#10;&#10;/* Define clock functions here to avoid header file name clash between uIP&#10;and the Luminary Micro driver library. */&#10;clock_time_t clock_time( void )&#10;{&#10;	return xTaskGetTickCount();&#10;}&#10;extern void timer_set(struct timer *t, clock_time_t interval);&#10;extern int timer_expired(struct timer *t);&#10;extern void timer_reset(struct timer *t);&#10;&#10;static void prvENET_Send(void)&#10;{&#10;	vInitialiseSend();&#10;	vIncrementTxLength( uip_len );&#10;	vSendBufferToMAC();&#10;}&#10;/*-----------------------------------------------------------*/&#10;&#10;static void prvSetMACAddress( void )&#10;{&#10;unsigned portLONG ulUser0, ulUser1;&#10;unsigned char pucMACArray[8];&#10;struct uip_eth_addr xAddr;&#10;&#10;	/* Get the device MAC address from flash */&#10;    FlashUserGet(&amp;ulUser0, &amp;ulUser1);&#10;&#10;	/* Convert the MAC address from flash into sequence of bytes. */&#10;    pucMACArray[0] = ((ulUser0 &gt;&gt;  0) &amp; 0xff);&#10;    pucMACArray[1] = ((ulUser0 &gt;&gt;  8) &amp; 0xff);&#10;    pucMACArray[2] = ((ulUser0 &gt;&gt; 16) &amp; 0xff);&#10;    pucMACArray[3] = ((ulUser1 &gt;&gt;  0) &amp; 0xff);&#10;    pucMACArray[4] = ((ulUser1 &gt;&gt;  8) &amp; 0xff);&#10;    pucMACArray[5] = ((ulUser1 &gt;&gt; 16) &amp; 0xff);&#10;&#10;	/* Program the MAC address. */&#10;    EthernetMACAddrSet(ETH_BASE, pucMACArray);&#10;&#10;	xAddr.addr[ 0 ] = pucMACArray[0];&#10;	xAddr.addr[ 1 ] = pucMACArray[1];&#10;	xAddr.addr[ 2 ] = pucMACArray[2];&#10;	xAddr.addr[ 3 ] = pucMACArray[3];&#10;	xAddr.addr[ 4 ] = pucMACArray[4];&#10;	xAddr.addr[ 5 ] = pucMACArray[5];&#10;	uip_setethaddr( xAddr );&#10;}&#10;/*-----------------------------------------------------------*/&#10;&#10;void vApplicationProcessFormInput( portCHAR *pcInputString, portBASE_TYPE xInputLength )&#10;{&#10;char *c, *pcText;&#10;static portCHAR cMessageForDisplay[ 32 ];&#10;extern xQueueHandle xOLEDQueue;&#10;xOLEDMessage xOLEDMessage;&#10;&#10;	/* Process the form input sent by the IO page of the served HTML. */&#10;&#10;	c = strstr( pcInputString, &quot;?&quot; );&#10;&#10;    if( c )&#10;    {&#10;		/* Turn LED's on or off in accordance with the check box status. */&#10;		if( strstr( c, &quot;LED0=1&quot; ) != NULL )&#10;		{&#10;			vParTestSetLED( 0, 1 );&#10;		}&#10;		else&#10;		{&#10;			vParTestSetLED( 0, 0 );&#10;		}		&#10;		&#10;		/* Find the start of the text to be displayed on the LCD. */&#10;        pcText = strstr( c, &quot;LCD=&quot; );&#10;        pcText += strlen( &quot;LCD=&quot; );&#10;&#10;        /* Terminate the file name for further processing within uIP. */&#10;        *c = 0x00;&#10;&#10;        /* Terminate the LCD string. */&#10;        c = strstr( pcText, &quot; &quot; );&#10;        if( c != NULL )&#10;        {&#10;            *c = 0x00;&#10;        }&#10;&#10;        /* Add required spaces. */&#10;        while( ( c = strstr( pcText, &quot;+&quot; ) ) != NULL )&#10;        {&#10;            *c = ' ';&#10;        }&#10;&#10;        /* Write the message to the LCD. */&#10;		strcpy( cMessageForDisplay, pcText );&#10;		xOLEDMessage.pcMessage = ( signed portCHAR * ) cMessageForDisplay;&#10;        xQueueSend( xOLEDQueue, &amp;xOLEDMessage, portMAX_DELAY );&#10;    }&#10;}&#10;&#10;&#10;/**/&#10;&#10;&#10;&#10;/***initBlock***/&#10;&#10;&#10;portBASE_TYPE i;&#10;uip_ipaddr_t xIPAddr;&#10;struct timer periodic_timer, arp_timer;&#10;extern void ( vEMAC_ISR )( void );&#10;&#10;char msg[25];&#10;xOLEDMessage xMessage;&#10;xMessage.pcMessage = msg;&#10;&#10;&#10;/* Enable/Reset the Ethernet Controller */&#10;SysCtlPeripheralEnable( SYSCTL_PERIPH_ETH );&#10;SysCtlPeripheralReset( SYSCTL_PERIPH_ETH );&#10;&#10;/* Create the semaphore used by the ISR to wake this task. */&#10;vSemaphoreCreateBinary( xEMACSemaphore );&#10;&#10;/* Initialise the uIP stack. */&#10;timer_set( &amp;periodic_timer, configTICK_RATE_HZ / 2 );&#10;timer_set( &amp;arp_timer, configTICK_RATE_HZ * 10 );&#10;uip_init();&#10;uip_ipaddr( xIPAddr, uipIP_ADDR0, uipIP_ADDR1, uipIP_ADDR2, uipIP_ADDR3 );&#10;uip_sethostaddr( xIPAddr );&#10;httpd_init();&#10;&#10;while( vInitEMAC() != pdPASS ) {&#10;        vTaskDelay( uipINIT_WAIT );&#10;}&#10;prvSetMACAddress();	&#10;&#10;/**/&#10;&#10;/***fireBlock***/&#10;$get(trigger, 0)&#10;&#10;/* Is there received data ready to be processed? */&#10;uip_len = uiGetEMACRxData( uip_buf );&#10;&#10;if( uip_len &gt; 0 ) {&#10;/* Standard uIP loop taken from the uIP manual. */&#10;&#10;	if( xHeader-&gt;type == htons( UIP_ETHTYPE_IP ) )&#10;	{&#10;		uip_arp_ipin();&#10;		uip_input();&#10;		/* If the above function invocation resulted in data that&#10;		should be sent out on the network, the global variable&#10;		uip_len is set to a value &gt; 0. */&#10;		if( uip_len &gt; 0 )&#10;		{&#10;			uip_arp_out();&#10;			prvENET_Send();&#10;		}&#10;	}&#10;	else if( xHeader-&gt;type == htons( UIP_ETHTYPE_ARP ) )&#10;	{&#10;		uip_arp_arpin();&#10;		/* If the above function invocation resulted in data that&#10;		should be sent out on the network, the global variable&#10;		uip_len is set to a value &gt; 0. */&#10;		if( uip_len &gt; 0 )&#10;		{&#10;			prvENET_Send();&#10;		}&#10;	}&#10;} else {&#10;	if( timer_expired( &amp;periodic_timer ) )&#10;	{&#10;		timer_reset( &amp;periodic_timer );&#10;		for( i = 0; i &lt; UIP_CONNS; i++ )&#10;		{&#10;			uip_periodic( i );&#10;					/* If the above function invocation resulted in data that&#10;			should be sent out on the network, the global variable&#10;			uip_len is set to a value &gt; 0. */&#10;			if( uip_len &gt; 0 )&#10;			{&#10;				uip_arp_out();&#10;				prvENET_Send();&#10;			}&#10;		}	&#10;		/* Call the ARP timer function every 10 seconds. */&#10;		if( timer_expired( &amp;arp_timer ) )&#10;		{&#10;			timer_reset( &amp;arp_timer );&#10;			uip_arp_timer();&#10;		}&#10;	}&#10;	else&#10;	{			&#10;		/* We did not receive a packet, and there was no periodic&#10;		processing to perform.  Block for a fixed period.  If a packet&#10;		is received during this period we will be woken by the ISR&#10;		giving us the Semaphore. */&#10;		xSemaphoreTake( xEMACSemaphore, configTICK_RATE_HZ / 2 );			&#10;	}&#10;}&#10;$send(output, 0)&#10;&#10;&#10;sprintf(msg, &quot;Webserver&quot;);&#10;xQueueSend( xOLEDQueue, &amp;xMessage, 100);&#10;&#10;/**/&#10;&#10;/***wrapupBlock***/&#10;/**/&#10;&#10;">
                </property>
                <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
                    <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="embeddedCCode">
                    </property>
                </property>
                <property name="_location" class="ptolemy.kernel.util.Location" value="[190.0, 555.0]">
                </property>
                <property name="CodeGenerator_AutoAdded" class="ptolemy.codegen.c.kernel.CCodeGenerator">
                    <property name="allowDynamicMultiportReference" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="codeDirectory" class="ptolemy.data.expr.FileParameter" value="$HOME/codegen/">
                        <property name="allowFiles" class="ptolemy.data.expr.Parameter" value="false">
                        </property>
                        <property name="allowDirectories" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                    </property>
                    <property name="compile" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="compileTarget" class="ptolemy.data.expr.StringParameter" value="">
                    </property>
                    <property name="generatorPackage" class="ptolemy.data.expr.StringParameter" value="ptolemy.codegen.c">
                    </property>
                    <property name="generateComment" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="generateCpp" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="generateJNI" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="inline" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="measureTime" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="overwriteFiles" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="padBuffers" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="run" class="ptolemy.data.expr.Parameter" value="true">
                    </property>
                    <property name="sourceLineBinding" class="ptolemy.data.expr.Parameter" value="false">
                    </property>
                    <property name="target" class="ptolemy.data.expr.StringParameter" value="default">
                    </property>
                </property>
                <property name="_stackSize" class="ptolemy.data.expr.StringParameter" value="mainBASIC_WEB_STACK_SIZE + 25">
                </property>
                <property name="_icon" class="ptolemy.vergil.icon.EditorIcon">
                    <property name="rectangle" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                        <property name="_location" class="ptolemy.kernel.util.Location" value="0.0, -13.0">
                        </property>
                        <property name="width" class="ptolemy.data.expr.Parameter" value="60.0">
                        </property>
                        <property name="height" class="ptolemy.data.expr.Parameter" value="32.0">
                        </property>
                        <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0, 1.0, 1.0, 1.0}">
                        </property>
                    </property>
                    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={104, 125, 815, 518}, maximized=false}">
                    </property>
                    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[600, 400]">
                    </property>
                    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="4.0">
                    </property>
                    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{0.0, 0.0}">
                    </property>
                    <property name="rectangle2" class="ptolemy.vergil.kernel.attributes.RectangleAttribute">
                        <property name="_location" class="ptolemy.kernel.util.Location" value="[0.0, 13.0]">
                        </property>
                        <property name="width" class="ptolemy.data.expr.Parameter" value="72.0">
                        </property>
                        <property name="height" class="ptolemy.data.expr.Parameter" value="13.0">
                        </property>
                        <property name="centered" class="ptolemy.data.expr.Parameter" value="true">
                        </property>
                        <property name="fillColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.4,0.4,0.4,1.0}">
                        </property>
                    </property>
                    <property name="ParameterValue" class="ptolemy.vergil.kernel.attributes.AttributeValueAttribute">
                        <property name="textSize" class="ptolemy.data.expr.Parameter" value="8">
                        </property>
                        <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="ipAddress">
                        </property>
                        <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="20">
                        </property>
                        <property name="_location" class="ptolemy.kernel.util.Location" value="[-30.0, -26.0]">
                        </property>
                    </property>
                    <property name="line" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                        <property name="_location" class="ptolemy.kernel.util.Location" value="[-14.0, 11.0]">
                        </property>
                        <property name="x" class="ptolemy.data.expr.Parameter" value="30.0">
                        </property>
                        <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                        </property>
                    </property>
                    <property name="line2" class="ptolemy.vergil.kernel.attributes.LineAttribute">
                        <property name="_location" class="ptolemy.kernel.util.Location" value="[-14.0, 15.0]">
                        </property>
                        <property name="x" class="ptolemy.data.expr.Parameter" value="30.0">
                        </property>
                        <property name="y" class="ptolemy.data.expr.Parameter" value="0.0">
                        </property>
                    </property>
                </property>
                <property name="ipAddress" class="ptolemy.data.expr.Parameter" value="{192, 168, 0, 2}">
                    <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
                    </property>
                </property>
                <property name="_expertMode" class="ptolemy.kernel.util.SingletonAttribute">
                </property>
                <port name="trigger" class="ptolemy.actor.TypedIOPort">
                    <property name="input"/>
                </port>
                <port name="output" class="ptolemy.actor.TypedIOPort">
                    <property name="output"/>
                    <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
                    </property>
                </port>
            </entity>
        </entity>
    </entity>
</entity>
