<html>
<head>
<title>Test Database Setup</title>
</head>
<body>
<h2>Xml DB Installation
<ol>
<li> Follow the installation instructions from
<a href="http://www.oracle.com/technology/software/products/berkeley-db/index.html"><code>http://www.oracle.com/technology/software/products/berkeley-db/index.html</code></a>
<li> Download the appropriate version: Berkeley DB XML 2.5.16
<li> For Mac-OS, please follow the installation instructions in
  <a href="OracleBerkeleyXMLDBMacOSXBuildInstructions.htm"><code>$PTII/ptdb/doc/OracleBerkeleyXMLDBMacOSXBuildInstructions.htm</code</a>
</ol>
<h2>Setting Environment Variables</h2>
<h3> For Windows
<ul>
<li> Add <code><i>Installation</i>\Berkeley DB XML 2.5.16\bin</code> to the System <code>PATH</code>
  environment variable by
  doing <CODE>Start Menu </CODE> -&gt; <CODE>Settings</CODE> -&gt;
<CODE>Control Panels</CODE> -&gt; <CODE>System</CODE> -&gt;
<CODE>Advanced</CODE> -&gt; <CODE>Environment Variables</CODE> and adding the value.

</ul>
<h3>For Mac-OS</h3>
<ul>
<li> Add <code><i>InstallationDirector</i>/dbxml-2.5.16/install/lib</i> to the DYLD_LIBRARY_PATH 
 <pre>
export DYLD_LIBRARY_PATH=${PTII}/vendors/misc/dbxml-2.5.16/install/lib:${DYLD_LIBRARY_PATH}
export PATH=${PTII}/vendors/misc/dbxml-2.5.16/install/bin:${PATH}
</ul>
If you place the above commands in <code>~/.bashrc</code>, then you will not
need to type them each time.

<h3>XML DB Setup</h3>
<ol>
 <li> Start up a command shell
     <br>Mac OS X: Utilities | Terminal
     <br>Windows: Start | Run | cmd
  <li> <code>cd</code> to the <code>ptdb/config/database/testdata</code> director:
  <br>Mac OS X:
 <pre>
 cd $PTII/ptdb/config/database/testdata
 </pre>

  <br>Windows:
 <pre>
 cd %PTII%\ptdb\config\database\testdata
 </pre>

  <li> Start up XML DB by running the <code>dbxml</code> command:
  <pre>
  dbxml
  </pre>
Note: The testing script is configured to create a container (database file) with the name Testing.dbxml and it will also add some default models we used for testing our code. These models will ensure that the JUnits run correctly.
</ol>

<h2>Creating a new database environment</h2>
  <li> Type <code>run create_script.txt</code> - the output of this command should be:
<pre>
dbxml&gt; run create_script.txt
Creating node storage container
Document added, name = ReferenceFile.ptdbxml
Document added, name = ModelContainsBothAttributes
Document added, name = X
Document added, name = Y
Document added, name = NoNamesNoValues
Document added, name = ContainsBothNamesButExchangedValues
Document added, name = ContainsBothNamesOneValue
Document added, name = ContainsOneNameValue
Document added, name = NoNamesAllValues
Document added, name = ModelB
Document added, name = ModelA
Document added, name = NoReferences
Document added, name = modeltt
Document added, name = CompositeActor

dbxml&gt;
<li> Type the <code>quit</code> command to exit the environment and commit the data.

<li> In <code>$PTII/ptdb/config/ptdb-params.properties</code>:
  <ol>
  <li> Set <code>DB_Url</code> to the location where the Testing.dbxml file was created - This   should be <code>$PTII/ptdb/config/database/testdata</code>.
  <li> Set <code>DB_Container_Name</code>
 to the name of the container file: <code>Testing.dbxml</code>.
  </ol>
For example
<pre>
DB_Class_Name = ptdb.kernel.database.OracleXMLDBConnection
DB_Url = /Users/ptolemy/ptII/ptdb/config/database/testdata
DB_Container_Name = Testing.dbxml
Cache_Container_Name = temp_cache.dbxml
</pre>
</ol>
You are done and may run the tests

<h3>Updating a preexisting database environment.

If you already have a database and want to add the test
database infrastructure, start up <code>dbxml</code> as above and then
type <code>run update_script.txt</code>.  The output should be like:

<pre>
dbxml> run update_script.txt
Document deleted, name = ReferenceFile.ptdbxml
Document deleted, name = ModelContainsBothAttributes
Document deleted, name = X
Document deleted, name = Y
Document deleted, name = NoNamesNoValues
Document deleted, name = ContainsBothNamesButExchangedValues
Document deleted, name = ContainsBothNamesOneValue
Document deleted, name = ContainsOneNameValue
Document deleted, name = NoNamesAllValues
Document deleted, name = ModelB
Document deleted, name = ModelA
Document deleted, name = NoReferences
Document deleted, name = modeltt
Document deleted, name = CompositeActor
Document added, name = ReferenceFile.ptdbxml
Document added, name = ModelContainsBothAttributes
Document added, name = X
Document added, name = Y
Document added, name = NoNamesNoValues
Document added, name = ContainsBothNamesButExchangedValues
Document added, name = ContainsBothNamesOneValue
Document added, name = ContainsOneNameValue
Document added, name = NoNamesAllValues
Document added, name = ModelB
Document added, name = ModelA
Document added, name = NoReferences
Document added, name = modeltt
Document added, name = CompositeActor
</pre>
<li> Type the <code>quit</code> command to exit the environment and commit the data.
</ol>

</body>
</html>