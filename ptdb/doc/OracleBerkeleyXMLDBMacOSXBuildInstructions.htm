<html>
<head>
<title>Installing Oracle Berkeley XML DB under Mac OS X</title>
</head>
<body>

Below are the steps necessary to install the Oracle Berkeley XML DB on Mac.  

<ol>
<li> Go to <a href="http://www.oracle.com/technology/software/products/berkeley-db/xml/index.html#in_browser" target="_top"><code>http://www.oracle.com/technology/software/products/berkeley-db/xml/index.html</code></a>.</li>
<li> Download the Berkeley DB XML 2.5.16.tar.gz (41M) from that page <a href="http://www.oracle.com/technology/software/products/berkeley-db/htdocs/popup/xml/2.5.16/xml-targz.html#in_browser" target="_top"><code>http://www.oracle.com/technology/software/products/berkeley-db/htdocs/popup/xml/2.5.16/xml-targz.html</code></a>.</li>

<li>	Unzip the downloaded tar.gz file in your intended installing folder for the XML DB.  <code>$PTII/vendors/misc</code>
is where $PTII/configure will look for Oracle Berkeley XML DB.
<pre>
cd $PTII/vendors/misc
tar -zxf ~/Downloads/dbxml-2.5.16.tar.gz
</pre>
</li>

<li> Go to the folder that was created and execute <code>buildall.sh</code>.
<br><b>Note that the build will take 40-50 minutes.</b>
By specifying the option <code>--enable-java</code>, the <code>dbxml.jar</code>
and <code>db.jar</code> Java jars will be created in <code><i>your_installation_path</i>/install/lib/</code>.

<pre>
cd dbxml-2.5.16
sh buildall.sh --enable-java >& build.out &
tail -f build.out
</pre>
</li>

<li>
After the build is done, go to the folder
<code><i>your_installation_path</i>/dbxml-2.5.16/install/bin</code>,
and execute the command <code>dbxml</code. 
<pre>
cd $PTII/vendors/misc/dbxml-2.5.16/install/bin
./dbxml
</pre>
Note: if the system cannot find this command, try to include the whole path of this command <code><i>your_installation_path</i>/dbxml-2.5.16/install/bin/dbxml</code>.

<li> The dbxml prompt (<code>dbxml></code>) will appear. You can test whether the XMLDB runs properly by testing with the guidance from <code><i>your_installation_path</i>/dbxml-2.5.16/dbxml/docs/intro_xml/running.html</code>.
</li>

<li> Add <code>dbxml.jar</code> and <code>db.jar</code> to your
classpath.  The easiest way is to run configure:
<pre>
cd $PTII
./configure
</pre>

<h2>Problem</h2>

Unfortunately, the build under Mac OS X may fail because
<code>jni.h</code>
cannot be found.
<p>The error message will be something like
<pre>
ln -s .libs/libdb_cxx-4.8.a libdb_cxx.a
./libtool --mode=compile gcc -c -I. -I../dist/..  -O3  -fno-strict-aliasing ../dist/../libdb_java/db_java_wrap.c
libtool: compile:  gcc -c -I. -I../dist/.. -O3 -fno-strict-aliasing ../dist/../libdb_java/db_java_wrap.c  -fno-common -DPIC -o .libs/db_java_wrap.o
../dist/../libdb_java/db_java_wrap.c:137:17: error: jni.h: No such file or directory
</pre>
See <a
href="http://forums.oracle.com/forums/thread.jspa?messageID=3484341&#3484341#in_browser"
target="_top"><code>http://forums.oracle.com/forums/thread.jspa?messageID=3484341&#3484341</code></a>.

<p>A <b>hack</b> is to create links in <code>/usr/local/include</code> to
your <code>jni.h</code>
<pre>
bash-3.2$ sudo -i
Password:
Claudius-Ptolemaus-MacBook-Pro:~ root# cd /usr/local/include
Claudius-Ptolemaus-MacBook-Pro:include root# which java
/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Commands/java
Claudius-Ptolemaus-MacBook-Pro:include root# ln -s /System/Library/Frameworks/JavaVM.framework/Versions/1.5/Headers/* .
Claudius-Ptolemaus-MacBook-Pro:include root# exit
</pre>
The problem with this hack is that if you change versions of Java,
then your <code>/usr/local/include</code> will have links to the old version.


</ol>
Version: $Id$
</body>
</html>
