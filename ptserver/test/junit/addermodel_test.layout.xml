<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<!-- Top level actor -->
<entity name="addermodel" class="ptolemy.actor.TypedCompositeActor">
	<!-- Basic properties. This includes the screen size and
		orientation the layout was created for. -->
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="8.1.devel">
    </property>
    <property name="droid_screenSize" class="ptserver.test.helper.ScreenSize" value="[600, 400]">
    </property>
    <property name="droid_client" class="ptolemy.data.expr.Parameter" value="HTC EVO 4G">
    </property>
    <property name="droid_orientation" class="ptolemy.data.expr.Parameter" value="portrait">
    </property>
    
    <!-- Static elements in the user interface, like tabs and labels -->

    <!-- Example tab 1 -->
    <property name="tab1" class="ptolemy.data.expr.Parameter" value="First tab">
    	<!-- Order number shows the relation between tabs. Must be unique -->
    	<property name="droid_taborder" class="ptolemy.data.expr.Parameter" value="1"></property>
    	<!-- Label example. -->
    	<property name="label1" class="ptolemy.data.expr.Parameter" value="Example label">
    		<!-- Some of the properties, like AndoridLocation, are required. -->
    		<!-- AndroidLocation is a currently non-existing class.
    			It will contain the following information:
    				The x and y position of the top-left corner
    				The height and width of the draw area. -->
    		<property name="droid_location" class="ptserver.test.helper.AndroidLocation" value="[10.0, 15.0, 10.0, 10.0]"></property>
    		<property name="droid_font" class="ptolemy.data.expr.Parameter" value="Arial"></property>
    		<property name="droid_fontSize" class="ptolemy.data.expr.Parameter" value="12"></property>
    	</property>  
    	<!-- Label example. -->
    	<property name="label2" class="ptolemy.data.expr.Parameter" value="Another one">
    		<property name="droid_location" class="ptserver.test.helper.AndroidLocation" value="[10.0, 35.0, 10.0, 10.0]"></property>
    		<property name="droid_font" class="ptolemy.data.expr.Parameter" value="Arial"></property>
    		<property name="droid_fontSize" class="ptolemy.data.expr.Parameter" value="12"></property>
    	</property>  
    </property>
    <!-- End of example tab 1 -->

    <!-- Example tab 2 -->
    <property name="tab2" class="ptolemy.data.expr.Parameter" value="Second tab">
    	<!-- Order number shows the relation between tabs. Must be unique -->
    	<property name="droid_order" class="ptolemy.data.expr.Parameter" value="2"></property>
    	<!-- Label example. -->
    	<property name="label1" class="ptolemy.data.expr.Parameter" value="Example label for tab 2">
    		<!-- Some of the properties, like AndoridLocation, are required. -->
    		<property name="droid_location" class="ptserver.test.helper.AndroidLocation" value="[10.0, 15.0, 10.0, 15.0]"></property>
    		<property name="droid_font" class="ptolemy.data.expr.Parameter" value="Arial"></property>
    		<property name="droid_fontSize" class="ptolemy.data.expr.Parameter" value="12"></property>
    	</property>  
    	<!-- Label example. -->
    	<property name="label2" class="ptolemy.data.expr.Parameter" value="Another one for tab 2">
    		<property name="droid_location" class="ptserver.test.helper.AndroidLocation" value="[10.0, 35.0, 10.0, 15.0]"></property>
    		<property name="droid_font" class="ptolemy.data.expr.Parameter" value="Arial"></property>
    		<property name="droid_fontSize" class="ptolemy.data.expr.Parameter" value="12"></property>
    	</property>  
    </property>
    <!-- End of example tab 2 -->

    <!-- End of static elements example. -->
    
    <!-- Source example.
    	When a source has been tagged as a source running on the client
    	using the "_remote" property, a RemoteSource actor is created
    	next to it to maintain the original connections. -->
    <entity name="Ramp" class="ptolemy.actor.lib.Ramp">
        <doc>Create a sequence of tokens with increasing value</doc>
        <!-- Remote property indicate that this entity runs on the client. -->
        <property name="_remote" class="ptolemy.data.expr.Parameter" value="source"></property>
    </entity>
    <!-- Remote actor created to retain the connections of the original source and facilitate
    	communication. -->
    <entity name="Ramp_remote" class="ptserver.actor.RemoteSink">
    	<!-- The original actor's name. This is used to identify the target of the communication. -->
        <property name="targetEntityName" class="ptolemy.kernel.util.StringAttribute" value=".addermodel.Ramp">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="multiport"/>
            <property name="targetPortName" class="ptolemy.kernel.util.StringAttribute" value=".addermodel.AddSubtract.plus">
            </property>
        </port>
    </entity>
    <!-- End of source example. -->

	<!-- Sink example.
		It is very similar to sources, these actors need user interface definitions. -->
    <entity name="Display" class="ptserver.test.SysOutActor">
        <property name="_remote" class="ptolemy.data.expr.Parameter" value="sink"></property>
        <!-- User interface properties to indicate position. -->
   		<property name="droid_location" class="ptserver.test.helper.AndroidLocation" value="[10.0, 15.0, 10.0, 10.0]"></property>
   		<property name="droid_tab" class="ptolemy.data.expr.Parameter" value="1"></property>
   		<!-- The following properties will set up whether users can view the entity's
   			parameters, change them, etc. -->
   		<property name="droid_visible" class="ptolemy.data.expr.Parameter" value="true"></property>
   		<property name="droid_enabled" class="ptolemy.data.expr.Parameter" value="true"></property>
   		<property name="droid_fixed" class="ptolemy.data.expr.Parameter" value="true"></property>
   		<!-- Any additional properties that the model specifies. -->
    </entity>
    <!-- Remote actor created to retain the connections of the original source and facilitate
    	communication. -->
    <entity name="Display_remote" class="ptserver.actor.RemoteSource">
        <property name="targetEntityName" class="ptolemy.kernel.util.StringAttribute" value=".addermodel.Display">
        </property>
        <port name="input" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="targetPortName" class="ptolemy.kernel.util.StringAttribute" value=".addermodel.AddSubtract.output">
            </property>
        </port>
    </entity>
    <!-- End of sink example. -->
    
    <!-- Settable parameter example.
    	When an actor's attributes are marked as changeable remotely a dummy structure
    	will be created, using Attribute object.
    	
    	Originally we wanted to create a structure based on ComponentEntity, but
    	TypedCompositeActor requires entities to extend TypedActor, which would create
    	a new unnecessary thread. -->
    <property name="Ramp2" class="ptolemy.kernel.util.Attribute">
        <property name="init" class="ptolemy.data.expr.Parameter" value="0">
        	<property name="_remote" class="ptolemy.data.expr.Parameter" value="attribute"></property>
	        <!-- User interface properties to indicate position. -->
   			<property name="droid_location" class="ptserver.test.helper.AndroidLocation" value="[10.0, 15.0, 10.0, 10.0]"></property>
   			<property name="droid_tab" class="ptolemy.data.expr.Parameter" value="1"></property>
	   		<!-- Similarly to Vergil, style information can be added.
	   			Note: NotEditableLineStyle is dependent on awt.
    	    <property name="style" class="ptolemy.actor.gui.style.NotEditableLineStyle"></property> -->
        </property>
    </property>
    <!-- End of settable parameter example. -->
    
    <!-- Relations and links for the client structure. -->
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="Display.input" relation="relation4"/>
    <link port="Display_remote.input" relation="relation4"/>
    <link port="Ramp.output" relation="relation"/>
    <link port="Ramp_remote.output" relation="relation"/>
    <!-- End of relations and links example. -->
</entity>

<!-- This is a template/example for the Android user layout file
	created	to show the structure of the XML created by the UI
	designer. It is based on the MoML format used by Ptolemy.
	
	The example is based on a simple model called addermodel, although
	additional information has been added to show the structure. Most
	of the classes used in this example are incorrect right now.
	
	For summary, the XML structure is the following:
	
	TopLevelEntity
		Basic properties (screen size, orientation, version number, etc.)
		Tabs
			Static labels
		Sources and their RemoteSource counterparts 
			"_remote" / "targetEntityName" property
			Behavioral properties
			Actor defined properties
		Sinks and their RemoteSink counterparts
			"_remote" / "targetEntityName" property
			Behavioral properties
			User interface specific properties
			Actor defined properties
		Attributes that are settable remotely
			User interface specific properties
			Style
		Relations and links
	-->
	