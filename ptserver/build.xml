<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="../" default="build" name="ptII">
	<property environment="env" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.5" />
	<property name="source" value="1.5" />

	<property name="ptserver.output" value="${basedir}/ptserver/output" />


	<path id="ptII.classpath">
		<pathelement location="." />
		<pathelement location="lib/bsh-2.0b4.jar" />
		<pathelement location="lib/ptCal.jar" />
		<pathelement location="lib/java_cup.jar" />
		<pathelement location="lib/saxon8.jar" />
		<pathelement location="lib/saxon8-dom.jar" />
		<pathelement location="lib/chic.jar" />
		<pathelement location="lib/junit-4.8.2.jar" />
		<pathelement location="lib/jython.jar" />
		<pathelement location="lib/kieler.jar" />
		<pathelement location="lib/ptcolt.jar" />
		<pathelement location="lib/ptjacl.jar" />
		<pathelement location="lib/mapss.jar" />
		<pathelement location="lib/sootclasses.jar" />
		<pathelement location="lib/jasminclasses.jar" />
		<pathelement location="ptolemy/distributed/jini/jar/jini-core.jar" />
		<pathelement location="ptolemy/distributed/jini/jar/jini-ext.jar" />
		<pathelement location="ptolemy/distributed/jini/jar/sun-util.jar" />
		<pathelement location="ptolemy/domains/ptinyos/lib/jdom.jar" />
		<pathelement location="ptolemy/domains/ptinyos/lib/nesc.jar" />
		<pathelement location="ptolemy/actor/ptalon/antlr/antlr.jar" />
		<pathelement location="lib/PDFRenderer.jar" />
		<pathelement location="ptserver/lib/hessian-4.0.7.jar" />
		<pathelement location="ptserver/lib/jetty-all-7.4.1.v20110513.jar" />
		<pathelement location="ptserver/lib/servlet-api-2.5.jar" />
		<pathelement location="ptserver/lib/wmqtt.jar" />
	</path>


	<target name="init">

	</target>
	<target name="clean">
		<delete>
			<fileset dir="." includes="**/*.class" />
			<fileset dir="${ptserver.output}" />
		</delete>
	</target>
	<target depends="clean" name="cleanall" />
	<target depends="build-subprojects,build-project" name="build" />
	<target name="build-subprojects" />
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="." source="${source}" target="${target}" includeAntRuntime="false">
			<src path="." />
			<exclude name="**/CVS/" />
			<exclude name="**/adm/" />
			<exclude name="**/codeDoc/" />
			<exclude name="config/" />
			<exclude name="diva/util/java2d/svg/" />
			<exclude name="jni/test/jni/meaningOfLife/" />
			<exclude name="jni/test/jni/testDeux/" />
			<exclude name="jni/test/jni/testTrois/" />
			<exclude name="ptdb/" />
			<exclude name="ptolemy/actor/lib/excel/" />
			<exclude name="ptolemy/actor/lib/mail/" />
			<exclude name="ptolemy/actor/lib/logic/fuzzy/" />
			<exclude name="ptolemy/actor/lib/opencv/" />
			<exclude name="ptolemy/actor/lib/reactable/" />
			<exclude name="ptolemy/backtrack/eclipse/" />
			<exclude name="ptolemy/backtrack/test/" />
			<exclude name="ptolemy/codegen/newInterfaces/" />
			<exclude name="doc/coding/templates/" />
			<exclude name="ptolemy/copernicus/kernel/fragment/" />
			<exclude name="ptolemy/distributed/" />
			<exclude name="doc/doclets/" />
			<exclude name="ptolemy/apps/" />
			<exclude name="ptolemy/domains/ct/demo/Saber/" />
			<exclude name="ptolemy/domains/gr/" />
			<exclude name="ptolemy/domains/gr/lib/experimental/" />
			<exclude name="ptolemy/domains/jogl/" />
			<exclude name="ptolemy/domains/pdf/" />
			<exclude name="ptolemy/domains/space/" />
			<exclude name="ptolemy/plot/servlet/" />
			<exclude name="vendors/" />
			<exclude name="ptolemy/actor/lib/io/comm/" />
			<exclude name="ptolemy/actor/lib/jai/" />
			<exclude name="ptolemy/actor/lib/jmf/" />
			<exclude name="ptolemy/actor/lib/joystick/" />
			<exclude name="ptolemy/actor/lib/jxta/" />
			<exclude name="ptolemy/actor/lib/x10/" />
			<exclude name="ptolemy/domains/gr/lib/quicktime/" />
			<exclude name="ptolemy/moml/jxta/" />
			<exclude name="ptolemy/moml/test/NoPackageActor.java" />
			<exclude name="src/" />
			<exclude name="ptolemy/vergil/basic/itextpdf/" />
			<exclude name="target/" />
			<exclude name="bin" />
			<exclude name="contrib" />
			<exclude name="diva" />
			<exclude name="doc" />
			<exclude name="lbnl" />
			<exclude name="lib" />
			<exclude name="mk" />
			<exclude name="org" />
			<exclude name="thales" />
			<exclude name="util" />
			<classpath refid="ptII.classpath" />
		</javac>
	</target>
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />
	<target name="PtolemyTestServer">
		<java classname="ptserver.communication.PtolemyTestServer" failonerror="true" fork="yes">
			<arg line="/Users/anarhuseynov/Desktop/addermodel.xml" />
			<classpath refid="ptII.classpath" />
		</java>
	</target>
	<target name="VergilApplication">
		<java classname="ptolemy.vergil.VergilApplication" failonerror="true" fork="yes">
			<classpath refid="ptII.classpath" />
		</java>
	</target>

	<property name="junit.output.dir" value="${ptserver.output}/junit" />
	<!-- Cobertura -->

	<target name="test" depends="init, build-project">

		<property name="instrumented.dir" value="${ptserver.output}/instrumented" />
		<property name="cobertura.dir" value="ptserver/lib" />
		<property name="coveragereport.dir" value="${ptserver.output}/coveragereport" />

		<path id="cobertura.classpath">
			<fileset dir="${cobertura.dir}">
				<include name="cobertura.jar" />
				<include name="asm-3.0.jar" />
				<include name="asm-tree-3.0.jar" />
				<include name="jakarta-oro-2.0.8.jar" />
				<include name="log4j-1.2.9.jar" />
			</fileset>
		</path>

		<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
		<delete file="cobertura.ser" />

		<delete dir="${instrumented.dir}" />
		<cobertura-instrument todir="${instrumented.dir}">
			<fileset dir="${basedir}">
				<include name="ptserver/**/*.class" />
				<exclude name="${ptserver.output}/**/*" />
				<exclude name="ptserver/test/**/*" />
			</fileset>
		</cobertura-instrument>
		<mkdir dir="${junit.output.dir}" />
		<junit printsummary="yes" fork="yes">
			<classpath>
				<path location="${instrumented.dir}" />
				<path refid="ptII.classpath" />
				<path refid="cobertura.classpath" />
			</classpath>
			<formatter type="xml" />
			<test name="ptserver.test.junit.AllTests" todir="${junit.output.dir}" />
			<!-- Cobertura -->
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${basedir}/cobertura.ser" />
		</junit>
		<cobertura-report format="xml" destdir="${coveragereport.dir}" srcdir="${basedir}"/>
	</target>
</project>
