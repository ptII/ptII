<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="GENERATOR" content="Quadralay WebWorks Publisher Standard Edition 6.0.6">
<meta name="TEMPLATEBASE" content="Portable HTML Standard Edition">
<meta name="LASTUPDATED" content="03/31/08 13:40:44">
<link href="default.css" rel="stylesheet" type="text/css">
<title>3.8 Nil Tokens</title>
</head>

<body link="#3366CC" vlink="#9999CC" text="#000000" alink="#0000CC" bgcolor="#FFFFFF"


<table width="331" border="0" align="right" cellpadding="0" cellspacing="0">
  <tr>
    <td><a href="expressions.htm"><img src="img/navtoc.gif" width="84" height="23"
    border="0" alt="TOC"> </a></td>
    <td><a href="expressionsa8.htm"><img src="img/navprev.gif" width="81" height="23"
    border="0" alt="PREV"> </a></td>
    <td><a href="expressionsa10.htm"><img src="img/navnext.gif" width="81" height="23"
    border="0" alt="NEXT"> </a></td>

    
  </tr>
</table>




<blockquote>
<h2>
  <a name="171756"> </a>3.8   Nil Tokens
</h2>


<a name="199018"> </a>Null or missing tokens are common in analytical systems like R and SAS where they are used to handle sparsely populated data sources.  In database parlance, missing tokens are sometimes called null tokens.  Since null is a Java keyword, we use the term "nil". Nil tokens are useful for analyzing real world data such as temperature where the value was not measured during every interval. In principle, an as yet unimplemented function such as average() method could properly handle nil tokens - when the average() method sees a nil token, it should be ignored. Note that this can lead to uncertainty. For example, if average() is expecting 30 values and 29 of them are nil, then the average will not be very accurate.<br>


<p>
  <a name="199019"> </a>If an operation such as add(), divide(), modulo(), multiply(), one(), subtract(), zero() or their corresponding "reverse" operations includes a nil token, then the output is nil. If one of the arguments for isCloseTo() or isEqualTo() is nil, then the method returns false. Methods that return a nil token return a nil token with a specific type so that type safety is preserved. The following tokens have NIL values defined: ArrayToken, BooleanToken, ComplexToken, DoubleToken, FloatToken IntToken, LongToken, ShortToken, StringToken, Token, UnsignedByteToken. There is no nil token for the various matrix tokens because the underlying matrices are java native type matrices that do not support nil.
</p>


<a name="199016"> </a>The expression language defines a constant named nil that refers to the Token.NIL field. The cast() expression language function can be used to generate references to the NIL fields of the other classes. For example, "cast(int, nil)" will return a reference to the IntToken.NIL field.<br>
</blockquote>



<table align="right" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td align="right"><font size="1">
    





    </td>
  </tr>
</table>

<table width="331" border="0" cellpadding="0" cellspacing="0">
  <tr>
    <td><a href="expressions.htm"><img src="img/navtoc.gif" width="84" height="23" border="0"
    alt="TOC"> </a></td>
    <td><a href="expressionsa8.htm"><img src="img/navprev.gif" width="81" height="23" border="0"
    alt="PREV"> </a></td>
    <td><a href="expressionsa10.htm"><img src="img/navnext.gif" width="81" height="23" border="0"
    alt="NEXT"> </a></td>


  </tr>
</table>

</body>
</html>
