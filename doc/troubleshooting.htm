<!-- $Id$ -->
<html>
<head>
<title>Troubleshooting</title>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<link href="default.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#ffffff">
<h1>Troubleshooting</h1>
<!--vergilDocs-->
Local Resources
<menu>
<li> <a href="ptIIfaq.htm">Frequently Asked Questions</a>
<li> <a href="help.htm">Getting Help</a>
<li> <a href="coding/applets.htm">Applet Information for Developers</a> -
including links to Applet resources on the net
</menu>

Contents
<menu>

<li> <a href="#vergil">Troubleshooting Vergil</a>
<li> <a href="#build">Troubleshooting Build problems</a>
<li> <a href="#applets">Troubleshooting Applets</a>
	<menu>
	<li> <a href="#jdk">Java version</a>
	<li> <a href="#plugin">The Java Plug-in</a>
	<li> <a href="#Diagnosing problems">Diagnosing problems</a>
	<li> <a href="#CLASSPATH">CLASSPATH variable</a>
	<li> <a href="#appletviewer">Appletviewer</a>
	<li> <a href="#spaces">AccessControlException caused by spaces in path name</a></a>
	<li> <a href="#Applet Troubleshooting Checklist">Applet Troubleshooting Checklist</a>
	</menu>
</menu>

<h2><a name="vergil">Troubleshooting Vergil</a></h2>
<dl>
<dt> How do I start Vergil by hand?
<dd> See
<a href="ptIIfaq.htm#invoking Ptolemy II?">How do I invoke Ptolemy II?</a>

<dt> The user interface appears to be frozen, but windows are redrawn.

<dd> A modal dialog may be open.  Unfortunately, these dialogs do not
appear in the task bar on windows systems, so the only way to find
them is to put windows in the background until they appear.  You can
do this by repeatedly hitting Alt-Escape.</li>

<dt> My model hangs, failing to make progress.

<dd> In the DE domain, if an actor has input tokens that it fails to
consume when it is fired, then it the director will continue to fire
it repeatedly until those tokens are consumed.  Actors in the DE
domain must consume pending input tokens.

<dt> Ptolemy seems to consume more and more memory after opening and closing several demos.

<dd> 
The drag and drop mechanism has contained many memory leaks in older versions
of Sun's JDK.   The leak occurs because there are references internal to the
platform drag and drop system that do not allow windows using drag and drop 
to be properly garbage collected after they are no longer visible. 
If you run into problems, we strongly suggest upgrading to the
newest version of Java.  We have seen memory leaks of this sort in versions
of Java prior to 1.3.1 beta. 

</dl>

<H2><a name="build">Troubleshooting Build problems</a></H2>
The <a href="install.htm">Ptolemy II Installation page</a> describes
how to rebuild Ptolemy.  If you are having problems building, try
removing <CODE>$PTII/config.cache</CODE>
and then re-running <CODE>$PTII/configure</CODE> and looking at the contents
of <CODE>$PTII/mk/ptII.mk.in</CODE>.

<dl>
<dt> Under NT, configure fails to run with
<CODE>bash: ./configure: No such file or directory</CODE>
<dd> Make sure that <CODE>/usr/bin/sh.exe</CODE> exists.
Be sure that you have installed the <CODE>ash</CODE> package
<br> As a workaround, try running <code>sh ./configure</code> or
<code>bash ./configure</code>

<dt> Messages about not being the owner of the directory.
<dd> Run

<pre>
cd $PTII
chmod -R a+w .
chown -R <I>yourlogin</I>
</pre>
If chown fails, be sure that <CODE>/etc/passwd</CODE> exists.
If it does not
 Create <CODE>/etc/passwd</CODE> and <CODE>/etc/group</CODE>
by running
<pre>
mkdir /etc
mkpasswd -l -g > /etc/passwd
mkgroup  -l > /etc/group
</pre>
For more information, type <CODE>mkpasswd</CODE> and <CODE>mkgroup</CODE>
without any arguments.  The Cygwin faq also covers these programs.

<dt> Under Windows, javac fails to find jar files like diva.jar
<dd> If you did not install Cygwin in the root directory, then
incorrect values may be being passed to javac.  javac does not
understand Cygwin paths like <CODE>/cygdrive/c</CODE>.
The fix is to set PTII to a windows style path with backslashes:
<pre>
C:\users\yourname\ptII
</pre>
Note that if you do this within bash, you would type:
<pre>
PTII=c:\\users\\yourname\\ptII
export PTII
</pre>

</dl>



<H2><a name="applets">Troubleshooting Applets</a></H2>
<p>
In theory, Java programs are "write once, run everywhere." In practice,
Java programs are somewhat less platform dependent than other programs,
but they are still platform dependent. Java programs that run under a web
browser, like Netscape or Internet Explorer, are called <I>applets</I>.
Whether an applet runs correctly depends on the version of the browser,
the operating system, the version of the operating system, and even the
hardware configuration. Collectively, all these parameters are called the
<I>platform</I>.

<P>The Ptolemy II applets have been tested with a very limited number
of platforms. This page is intended to help you diagnose
problems. Please send email to
ptII at eecs berkeley edu if you
find errors or can suggest additions to this page.

<H3><A NAME="jdk">Java version</A></H3>
The applets on these pages require JDK 1.4 (JDK stands for the
Java Development Kit).
(See the <a href="install.htm#java">Java section</a> of the installation page for details)

<h3><a name="plugin">The Java Plug-in</a></h3>
The
<a href="http://www.javasoft.com/products/plugin/" target="_top">Javasoft Java Plug-in</a>
provides support for JDK1.4 under Mozilla and 
Explorer.

 <p>Under Windows, the Java Plug-in 1.4 is automatically installed
when JRE 1.4 is installed (JRE stands for Java Runtime Environment).
JRE 1.4 is available as a standalone install from Sun.

The JRE does not include the Java compiler (<CODE>javac</CODE>), so
if you are planning on doing any development, you should install
the JDK, not the JRE.  See the
<a href="install.htm">Ptolemy II Installation</a> page for
installation instructions.

 <p>Under Solaris 2.6 and 2.7, the plug-in is available as a separate
download (which we have not tested).

 <p>If you are on a platform where the browser does not have
the Java plug-in 1.4, then you can still run the demos with the
JDK <a href="#appletviewer">Appletviewer</a>

<H3><a name="Diagnosing problems">Diagnosing problems</a></H3>

The Java Plug-in includes a console window which reports errors.
 <p>Under JDK1.4, the console window can be enabled by going to
<CODE>Start</CODE> -&gt; <CODE>Settings</CODE> -&gt;
<CODE>Control Panel</CODE> -&gt; <CODE>Java Plug-in</CODE>
and selecting <CODE>Show Java Console</CODE>.  Then restart the browser.

 <p>Note that the Java Plug-In console is different than
the Netscape or IE Java console.

 <p>
The first thing to try is to determine whether the problem is
with the Ptolemy Applets, or with any Java Plug-in applets at all
<br>The Java Plug-in page at
<a href="http://java.sun.com/products/plugin/index-1.4.html"><CODE>http://java.sun.com/products/plugin/index-1.4.html</CODE></a>
has links to demonstrations.  

 <p><a name="jit">The</a> plug-in control panel also has a checkbox
to turn off the Just In Time (JIT) Compiler.  If you are having problems
with the Netscape process lingering after you exit the browser, then
try turning the JIT off and restarting Navigator.  This is a bug
in the JDK1.2.1 Plug-in that may have been fixed in JDK1.2.2, see
<a href="http://developer.java.sun.com/developer/bugParade/bugs/4236070.html">bug 4236070 in the Java Developer Connection</a>

 <p><a name="jar cache">The</a> plug-in control panel also has a checkbox
that turns off the Jar Cache.  If you are debugging applets, you
may want to turn off the Jar Cache so that .class files and jar files
are reloaded when the applet is reloaded.  Note that if you turn
off the Jar Cache, then memory usage is increased.

<H3><a name="CLASSPATH">CLASSPATH variable</a></H3>
Java supports an environment variable called CLASSPATH that tells the Java
virtual machine where to look for code. As a general rule, it is not a
good idea to set this variable. It is extremely difficult to set it correctly,
and if it is set incorrectly, it may prevent all Java programs from running.
The symptom is usually that you get a "class not found" error, although
this error is generated by Java for almost any kind of problem.

<P>Under Windows NT (4.0), open the Start menu (at the lower left), select
Settings and then Control Panel. Open the System control panel, and click
on the Environment tab. If the CLASSPATH variable is set, we suggest clearing
it (you may want to save its value, since it may be needed by some other
program). You then probably have to restart your browser.

<h3><a name="appletviewer">Appletviewer</a></h3>

If you are having problems running an applet with a browser, and the
applet is on the local machine and you have a JDK installed, you may
want to try using the JDK <CODE>appletviewer</CODE> program instead
of the browser.
 <p>For example, to view an applet contained in the file
<CODE>myapplet.htm</CODE>
<pre>
setenv CLASSPATH $PTII
appletviewer myapplet.htm
</pre>
 <p>Each Ptolemy II demo has a makefile with a <CODE>demo</CODE>
rule that will run the appletviewer for that demo.  For example,
to run the <CODE>Inspection</CODE> demo:
<pre>
cd $PTII/ptolemy/domains/de/demo/Inspection
make demo
</pre>
The directory above each individual demo also has a <CODE>demo</CODE>
rule that will run all the individual demos
<pre>
cd $PTII/ptolemy/domains/de/demo
make demo
</pre>
To run all the demos:
<pre>
cd $PTII
make demo
</pre>

 <p>The Solaris <CODE>appletviewer</CODE> can also take command line
arguments that are passed to the underlying Java engine.  For example,
to turn on verbose class messages:
<pre>
appletviewer -J-verbose:class myapplet.html
</pre>
 <p>If you see the messages below, then you are running
a JDK1.1 <CODE>appletviewer</CODE> instead of a JDK 1.4 <CODE>appletviewer</CODE>.
<pre>
Warning: &lt;param&gt; tag outside &lt;applet&gt; ... &lt;/applet&gt;.
Warning: &lt;param&gt; tag outside &lt;applet&gt; ... &lt;/applet&gt;.
Warning: &lt;param&gt; tag outside &lt;applet&gt; ... &lt;/applet&gt;.
Warning: &lt;param&gt; tag outside &lt;applet&gt; ... &lt;/applet&gt;.
Warning: &lt;param&gt; tag outside &lt;applet&gt; ... &lt;/applet&gt;.
Warning: &lt;param&gt; tag outside &lt;applet&gt; ... &lt;/applet&gt;.
Warning: No Applets were started. Make sure the input contains an &lt;applet&gt; tag.
usage: appletviewer [-debug] [-J&lt;javaflag&gt;] [-encoding &lt;character encoding type
 ] url|file ...
</pre>
The solution is to adjust your path so that the JDK1.4 appletviewer
is before the JDK1.1 version.



<h3><a name="spaces">AccessControlException caused by spaces in path name</a></a></h3>

Under Java 1.4.0_01, applets that have spaces in the path name may
fail if the applet tries to download a data file.  
For example, the Ptplot
<a href="../ptolemy/plot/demo/Marks.htm">Marks demo</a> 
tries to access a data file but fails if the pathname has a space in it.

For example,
<code>file:///C:/tmp/ptplot/ptolemy/plot/demo/Marks.htm</code>
works fine

But doing
<pre>
cd c:/tmp
mv ptplot pt\ plot
</pre>

and then going to
<code>file:///C:/tmp/pt plot/ptolemy/plot/demo/Marks.htm</code>

results in
<pre>
java.security.AccessControlException: access denied (java.io.FilePermission C:\tmp\ptplot 52\ptolemy\plot\demo\plotmlSample.txt read)
	at java.security.AccessControlContext.checkPermission(AccessControlContext.java:270)
	at java.security.AccessController.checkPermission(AccessController.java:401)
	at java.lang.SecurityManager.checkPermission(SecurityManager.java:542)
	at java.lang.SecurityManager.checkRead(SecurityManager.java:887)
	at java.io.File.isDirectory(File.java:698)
	at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:65)
	at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:148)
	at java.net.URL.openStream(URL.java:955)
	at ptolemy.plot.PlotApplet.init(PlotApplet.java:133)
	at sun.applet.AppletPanel.run(AppletPanel.java:341)
	at java.lang.Thread.run(Thread.java:536)
</pre>
This is a known bug, see:
<a href="http://developer.java.sun.com/developer/bugParade/bugs/4697178.html">http://developer.java.sun.com/developer/bugParade/bugs/4697178.html</a>

which says:
<blockquote>
<br>CUSTOMER WORKAROUND :
<br>A couple of workarounds found:
<p>o Don't package the files into a JAR. Problem does not
appear to occur when just .class files are available.

<p>o Change directory of installed applet to one without
spaces in the name.

<p>o Access the HTML file using an HTTP URL. Problem only
occurs when file is accessed via a file URL.

<p>o Use policytool to modify the java security file, giving
permission to the file being read (was suggested by another
user here with the problem; did not confirm myself).

<p>xxxxx@xxxxx 2002-06-11
<br>This is due to the special charactor for space. When we add the permission for
the file to read, we still use "%20" instead of the real " " for the path,
which cause the applet don't have the permission to read the file.

<br>Solution: In src/share/classes/sun/applet/AppletClassLoader.java
 
call ParseUtil.decode(path) method before add the permission.
</blockquote>

<p>Unfortunately, this bug means that if we ship a prebuilt version of ptplot
or Ptolemy II and the user tries to access the applets from the local
partition, then there will be errors.

<p>The only applets that fail are applets that are on a local file system, 
accessed with file://, that have spaces in the path and the applet
needs to access a data file that is local.

<p>This bug is not present in Java 1.3.1_03 and 1.4.1-beta.


<h3><a name="Applet Troubleshooting Checklist">Applet Troubleshooting Checklist</a></h3>
If you have problems with applets, follow the checklist below
<ol>

<li> Reload the frame.  Under Netscape Communicator, right click on
the frame, and then select <CODE>Reload Frame</CODE>.

<li> Reload all the frames by hitting the <CODE>Reload</CODE> button.
This is likely to bring you back to the Ptolemy II toplevel page.
 <br>Under Netscape Communicator, holding the Shift key down and hitting
the <CODE>Reload</CODE> button will reload any Java
<CODE>.class</CODE> or <CODE>.jar</CODE> files
 <br>Under Internet Explorer, press Ctrl+F5 or Ctrl+the Refresh button

<li> Restart your browser.

 <li>Verify that the Plug-In Control Panel menu choice is present.
 <br>Under JDK1.4, look for
<CODE>Start</CODE> -&gt; <CODE>Settings</CODE> -&gt;
<CODE>Control Panel</CODE> -&gt; <CODE>Java Plug-in</CODE>
  <br>If the <CODE>Java Plug-In Control Panel</CODE>
 menu choice is not present, then
you may need to install or reinstall the Java plug-in.
 <li> Look for an error message in the Java console.
See <a href="#Diagnosing problems">Diagnosing problems</a> above.

 <li> Verify that the browser sees the plug-in
 <br>In Netscape, go to help->About plugins, or type in
<a href="about:plugins"><CODE>about:plugins </CODE></a>
into the Location entry widget.

The Java plug-in 1.4 should be listed.  If it is not reinstall
the plug-in.

If the plug-in is not listed after reinstalling, then remove and reinstall
Netscape.


<li> Verify that your <CODE>CLASSPATH</CODE> variable is not set.
See the <a href="#CLASSPATH">CLASSPATH variable</a> instructions above.

<li> Verify that you are running a recent version of the browser

<dt> Try out a non-Ptolemy Java 1.4 applet
<dd> If are having problems with the plug-in you may want to try
<a href="http://www.javasoft.com/products/plugin/1.4/demos/applets.html" target="_top">Java Plug-In 1.4 Demonstration Applets</a>
page has a few sample Java 1.4 applets.

<li> Under Internet Explorer, the Swing Query boxes will sometimes
not respond. The workaround is to minimize the IE window and bring it back.
The query box should now work.

<li> Try opening the applets on the
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII" target="_top">Ptolemy II Website</a>

<li> Try a different browser

<li> Try running the applets using the JDK
<a href="#appletviewer"><CODE>appletviewer</CODE></a> program.

<li> If you are running under Microsoft Windows or NT, try rebooting.

<li> Use the Plugin Control Panel to turning off the Just In Time
(JIT) compiler in the plug-in and restart the browser.
Under NT, the Plug-In Control Panel can
be found at <CODE>Start</CODE> -&gt; <CODE>Programs</CODE> -&gt;
<CODE>Java Plug-In Control Panel</CODE>

<li> Try running the applets from a different machine or as a different
user.

<li> Uninstall and reinstall browser and the JDK

<br> The most drastic step is to uninstall the browser and JDK.
Unfortunately, this is likely to require that you reinstall any other
plug-ins, such as Adobe Acrobat.
<ol>
  <li> Uninstall the browser

  <li> Uninstall JDK

  <li> (optional) If deinstallation does not remove the directories where
the browser and the JDK were installed, then remove them by hand.

  <li> Reboot

  <li> Install the browser

  <li> Install JDK

  <li> Try the steps above again.
 </ol>

<li> If you are still having problems,
send email to:
ptII at eecs berkeley edu
with the following information:
	<menu>
	<li> The URL or file you were trying to run
	<li> Your operating system and version
	<li> The name and version of the browser you were running
	under
	<li> The contents of the Java console
	</menu>

</ol>

<p><font size="2" color="#cc0000">Last Updated: $Date$</font>
</body>
</html>
