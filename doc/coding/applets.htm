<!-- $Id$-->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<link href="../default.css" rel="stylesheet" type="text/css">
<title>Applets information for Ptolemy II Developers</title>
</head>
<body>
<H1>Applet information for Ptolemy II Developers</H1>

Remote places to go
<menu>
<li> Sun:
  <ul>
  <li> <a href="http://java.sun.com/docs/books/tutorial/applet/index.html" target="_top">Javasoft applet tutorial</A>
  <li> <a href="http://java.sun.com/applets/resources.html" target="_top">Javasoft applet resources</a>
  <li> <a href="http://java.sun.com/j2se/1.4.2/docs/guide/plugin/" target="_top">JDK Plugin documentation</a>
  <li> <a href="http://java.sun.com/j2se/1.4/docs/guide/misc/applet.html" target="_top">JDK applet tag page</A>

  <li> <a href="http://java.sun.com/sfaq" target="_top">Java Security FAQ</a>
  <li> <a href="http://java.sun.com/products/plugin/" target="_top">Java Plug-in</a>
   </ul>

<li> Microsoft
  <ul>
  <li> <a href="http://www.microsoft.com/java/download.htm" target="_top">Microsoft Virtual Machine Download Page</a>
  </ul>


<li> <a href="http://gamelan.earthweb.com" target="_top"><CODE>www.gamelan.com</CODE></A>

</menu>

Local Places to go:
<menu>
<li> <a href="style.htm#applet conventions">Applet Coding Conventions</a>
<li> <a href="../troubleshooting.htm">Troubleshooting Ptolemy II</a> -
     <a href="../troubleshooting.htm#plugin">Plug-in section</a>
</menu>

Contents:
<menu>
<li> <a href="#Applet Features">Applet Features</A>
<li> <a href="#Converting Applets to Applications">Converting Applets to Applications</A>
</menu>

 <HR>
<H2><A NAME="Applet Features">Applet Features</A></H2>

An applet consists of an piece of html that downloads Java class files
or jar files to the user's browser and then runs the Java code.

 <p>Applets have a security model that prevents the Java code from
performing unsafe actions.
The <a href="http://java.sun.com/docs/books/tutorial/applet/practical/security.html" target="_top">Security Restrictions</a> page of the Java tutorial
describes these restrictions.

 <p> Most of the Ptolemy II demonstrations were written as Java
plug-in 1.4 applets.  These applets use the Java Plug-in, which runs under
both Netscape Communicator and Microsoft Internet Explorer.

See the
<a href="../troubleshooting.htm#plugin">Plug-in section of the Ptolemy II Troubleshooting guide</a> for details.
<hr>


<H2><A NAME="Converting Applets to Applications">Converting Applets to Applications</A></H2>
Remote Links:
<menu>
<li> <a href="http://www.javaworld.com/jw-01-1997/jw-01-applet.to.app.html" target="_top">1/97 Javaworld article about converting applets to applications</a>


<li> <a href="http://developer.java.sun.com/developer//technicalArticles/Programming/TurningAnApplet/index.html" target="_top">7/98 Java Developer Connection (JDC) article about converting Applets into Applications</a> (The JDC requires registration, but is free to join)

</menu>

The old AWT Java Tutorial UI Components Problems page said:
<BLOCKQUOTE>
Problem: All your examples are of applets. How do I apply them to applications?

 <P>Except where noted, anywhere in this trail that you see a subclass of
the Applet class, you can substitute a subclass of the Panel class or,
if the subclass isn't used as a container, a subclass of the Canvas
class. In general, it's easy to convert an applet into an application,
as long as the applet doesn't rely on any special applet abilities
(such as using methods defined in the Applet class).

 <P>To convert an applet into an application, you need to add a main()
method that creates an instance of a Frame subclass, creates an
instance of the Applet (or Panel or Canvas) subclass, adds the
instance to the Frame, and then calls the init() and start() methods
of the instance.  The Frame subclass should have a handleEvent()
implementation that handles WINDOW_DESTROY events in the appropriate
way.

 <P>See AnimatorApplet.java and AnimatorApplication.java for examples of
an applet and an application that implement the same functionality.
</BLOCKQUOTE>
(The AWT Java Tutorial page is no longer on the web, it was replaced
by the Swing Java Tutorial page)

 <P>Advantages:
<menu>
<li> You can customize your application so it has the proper interface

<li> The application consists of one class, so shipping is easy
</menu>
Disadvantages:
<menu>
<li> If your applet calls <CODE>getParameter</CODE>, then you will
get a <CODE>NullPointerException</CODE>.  The fix is to do something
like
<PRE>
        try {
            dataurl = getParameter("dataurl");
        } catch (NullPointerException e) {
	    dataurl = _dataurl;
	}
</PRE>
</menu>

<p><font size="2" color="#cc0000">Last Updated: $Date$</font>
</body>
</html>
