<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<!-- Generated from latex, don't update this file, update -->
<!-- ptIIdoc/doc/design/src/tex/expression.tex -->

<meta name="LASTUPDATED" content="$Id$">
<link href="default.css" rel="stylesheet" type="text/css">
<title>3.3 Uses of Expressions</title>
</head>

<body link="#3366CC" vlink="#9999CC" text="#000000" alink="#0000CC" bgcolor="#FFFFFF"


<table width="331" border="0" align="right" cellpadding="0" cellspacing="0">
  <tr>
    <td><a href="expressions.htm"><img src="img/navtoc.gif" width="84" height="23"
    border="0" alt="TOC"> </a></td>
    <td><a href="expressionsa3.htm"><img src="img/navprev.gif" width="81" height="23"
    border="0" alt="PREV"> </a></td>
    <td><a href="expressionsa5.htm"><img src="img/navnext.gif" width="81" height="23"
    border="0" alt="NEXT"> </a></td>

    
  </tr>
</table>
<blockquote>
<div class="p"><!----></div>
<h2><a name="tth_sEc3">
3</a>&nbsp;&nbsp;Uses of Expressions</h2>
<a name="pgfId-175570">
</a>
    <h3><a name="tth_sEc3.1">
3.1</a>&nbsp;&nbsp;Parameters</h3>
<a name="pgfId-175574">
</a>

<div class="p"><!----></div>
The values of most parameters of actors can be given as expressions

. The variables in the expression refer to other parameters that are
in scope, which are those contained by the same container or some
container above in the hierarchy. They can also reference variables in
a 
<em>scope-extending attribute</em>, which includes variables defining units, as explained below in section <a href="#sec:units">12</a>. Adding parameters to actors is straightforward, as explained in the previous chapter.

    <h3><a name="tth_sEc3.2">
3.2</a>&nbsp;&nbsp;Port Parameters</h3>
<a name="pgfId-176319">
</a>

<div class="p"><!----></div>
It is possible to define a parameter that is also a port. Such a
PortParameter provides a default value, which is
specified like the value of any other parameter. When the
corresponding port receives data, however, the default value is
overridden with the value provided at the port. Thus, this object
functions like a parameter and a port. The current value of the
PortParameter is accessed like that of any other parameter. Its
current value will be either the default or the value most recently
received on the port.

<div class="p"><!----></div>
A PortParameter might be contained by an atomic actor or a composite
actor. To put one in a composite actor, drag it into a model from the
utilities library, as shown in figure
<a href="#fig:portParameter">2</a>. The resulting icon is actually a combination of two
icons, one representing the port, and the other representing the
parameter. These can be moved separately, but doing so might create
confusion, so we recommend selecting both by clicking and dragging
over the pair and moving both together.

<div class="p"><!----></div>
<a name="tth_fIg2">
</a> <center> <img src="img/vol1Figure3-2.png"/>

<center>Figure 2: A <em>portParameter</em> is both a port and a parameter.  To
 use it in a composite actor, drag it into the actor, change its
 name to something meaningful and set its default value.</center>
<a name="fig:portParameter">
</a>
</center>
<div class="p"><!----></div>
To be useful, a PortParameter has to be given a name (the default
name, "portParameter," is not very compelling). To change the name,
right click on the icon and select "Customize Name," as shown in
figure <a href="#fig:portParameter">2</a>. In the figure, the name is set to
"noiseLevel." Then set the default value by either double clicking
or selecting "Configure." In the figure, the default value is set to
10.0.

<div class="p"><!----></div>
An example of a library actor that uses a PortParameter is the
Sinewave actor, which is found in the <em>sources</em>
library in Vergil. It is shown in figure <a href="#fig:Sinewave">3</a>. If you
double click on this actor, you can set the default values for
<em>frequency</em> and <em>phase</em>. But both of these values can also be set by the
corresponding ports, which are shown with grey fill.

<div class="p"><!----></div>

<div class="p"><!----></div>
<a name="tth_fIg3">
</a> <center><img src="img/vol1Figure3-3.png"/>

<center>Figure 3: Sinewave actor, showing its port parameters, and their use at
the lower level of hierarchy</center>
<a name="fig:Sinewave">
</a>
</center>
<div class="p"><!----></div>
    <h3><a name="tth_sEc3.3">
3.3</a>&nbsp;&nbsp;String Parameters</h3>
<a name="pgfId-171261">
</a>

<div class="p"><!----></div>
Some parameters have values that are always
strings of characters. Such parameters support a simple string
substitution mechanism where the value of the string can reference
other parameters in scope by name using the syntax $<em>name</em>, where name
is the name of the parameter in scope. For example, the StringCompare
actor in figure <a href="#fig:StringParameter">4</a> has as the value of <em>firstString</em>"The
answer is $PI". This references the built-in constant PI. The value
of <em>secondString</em> is "The answer is 3.1415926535898". As shown in the
figure, these two strings are deemed to be equal because $PI is
replaced with the value of PI.

<div class="p"><!----></div>

<div class="p"><!----></div>
<a name="tth_fIg4">
</a> <center><img src="img/vol1Figure3-4.png"/>

<center>Figure 4: String parameters are indicated in the parameter editor
 boxes by a light blue background.  A string parameter can include
 references to variables in scope with $<em>name</em>, where
 <em>name</em> is the name of the variable.  In this example, the
 built-in constant $PI is referenced by name in the first parameter.</center>
<a name="fig:StringParameter">
</a>
</center>
<div class="p"><!----></div>
    <h3><a name="tth_sEc3.4">
3.4</a>&nbsp;&nbsp;Expression Actor</h3>
<a name="42872">
</a>

<div class="p"><!----></div>
Expression actor is a particularly useful actor found in the

<em>math</em> library. By default, it has one output and no inputs, as shown in Figure <a href="#fig:Expression">5</a>3.5(a). The first step in using it is to add ports, as shown in (b) and (c), resulting in a new icon as shown in (d). Note: In (c) when you click on Add, you will be prompted for a Name (pick one) and a Class. Leave the Class entry blank and click OK. You then specify an expression using the port names, as shown in (e), resulting in the icon shown in (f).

<div class="p"><!----></div>
<a name="tth_fIg5">
</a> <center><img src="img/vol1Figure3-5.png">

<center>Figure 5: Illustration of the Expression actor.</center>
<a name="fig:Expression">
</a>
</center>
<div class="p"><!----></div>
    <h3><a name="tth_sEc3.5">
3.5</a>&nbsp;&nbsp;State Machines</h3>
<a name="pgfId-183128">
</a>

<div class="p"><!----></div>
Expressions give the guards for state transitions, as well as the
values used in actions that produce outputs and actions that set
values of parameters in the refinements of destination states. This
mechanism was explained in the previous chapter.

</blockquote>

<table width="331" border="0" cellpadding="0" cellspacing="0">
 <tr>
   <td><a href="expressions.htm"><img src="img/navtoc.gif" width="84" height="23" border="0"
   alt="TOC"> </a></td>
   <td><a href="expressionsa3.htm"><img src="img/navprev.gif" width="81" height="23" border="0"
   alt="PREV"> </a></td>
   <td><a href="expressionsa5.htm"><img src="img/navnext.gif" width="81" height="23" border="0"
   alt="NEXT"> </a></td>


 </tr>
</table>

</body>
</html>
